<apex:page controller="LeadSelectMedEmailController_AC" standardStylesheets="false" sidebar="false">
    <apex:includeScript value="{!URLFOR($Resource.MakeAWishAmericaDesign,'js/jquery.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SLDS, '/0_12_2/assets/styles/salesforce-lightning-design-system-vf.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SweetAlert, 'sweet-alert.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.SweetAlert, 'sweet-alert.js')}"/>
    <apex:includeScript value="/support/console/42.0/integration.js"/><!-- Added Includescript for IME-25-->
    <div class="slds">
        <apex:form id="frm">
            <apex:pagemessages id="msg"/>
            <input type="hidden" value="{!URLToRedirect}" class="getUrl"/>
            <div class="slds-card slds-m-horizontal--large">
                <div class="slds-card__header slds-grid slds-grid--align-spread">
                    <h2 class="slds-text-heading--small slds-truncate slds-align-middle">
                        Select Contact to send the Diagnosis Verification
                    </h2>
                </div>
                <table class="slds-table slds-table--bordered">
                    <thead class="thead-default">
                        <tr>
                            <th title="First Name">Name</th>
                            <th title="Email">E-mail</th>
                            <th title="Type">Type</th>
                            <th colspan="2" title="Type">Contact Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                    <apex:repeat value="{!contacts}" var="ctc">
                        <tr class="slds-text-title_caps">
                            <td>{!ctc.name}</td>
                            <td></td>
                            <td>{!ctc.type}</td>
                            <td colspan="2" rowspan="{!ctc.numProvidedEmails}" style="white-space: break-spaces; vertical-align: text-top;">{!ctc.contactNotes}</td>
                        </tr>
                        <tr>
                            <td style="border: none; {!IF(ctc.workEmail == '','display:none;','')}"></td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.workEmail == '','display:none;','')}">
                                <input id="{!ctc.type}WorkEmail" type="radio" name="rec" class="selVal"
                                       value="{!ctc.workEmail}" data-type="{!ctc.type}" data-email="{!ctc.workEmail}"/>
                                <label for="{!ctc.type}WorkEmail">{!ctc.workEmail}</label>
                            </td>
                            <td style="border: none; {!IF(ctc.workEmail == '','display:none;','')}">Work</td>
                        </tr>
                        <tr>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail1 == '','display:none;','')}"></td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail1 == '','display:none;','')}">
                                <input id="{!ctc.type}AlternateEmail1" type="radio" name="rec" class="selVal"
                                       value="{!ctc.alternateEmail1}" data-type="{!ctc.type}"
                                       data-email="{!ctc.alternateEmail1}"/>
                                <label for="{!ctc.type}AlternateEmail1">{!ctc.alternateEmail1}</label>
                            </td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail1 == '','display:none;','')}">Alt 1</td>
                        </tr>
                        <tr>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail2 == '','display:none;','')}"></td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail2 == '','display:none;','')}">
                                <input id="{!ctc.type}AlternateEmail2" type="radio" name="rec" class="selVal"
                                       value="{!ctc.alternateEmail2}" data-type="{!ctc.type}"
                                       data-email="{!ctc.alternateEmail2}"/>
                                <label for="{!ctc.type}AlternateEmail2">{!ctc.alternateEmail2}</label>
                            </td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.alternateEmail2 == '','display:none;','')}">Alt 2</td>
                        </tr>
                        <tr>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.newEmailProvided == '','display:none;','')}"></td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.newEmailProvided == '','display:none;','')}">
                                <input id="{!ctc.type}NewProvidedEmail" type="radio" name="rec" class="selVal"
                                       value="{!ctc.newEmailProvided}" data-type="{!ctc.type}"
                                       data-email="{!ctc.newEmailProvided}"/>
                                <label for="{!ctc.type}NewProvidedEmail">{!ctc.newEmailProvided}</label>
                            </td>
                            <td id="{!ctc.type}" style="border: none; {!IF(ctc.newEmailProvided == '','display:none;','')}">New Provided</td>
                        </tr>
                    </apex:repeat>
                    </tbody>
                </table>
            </div>
            <div class="slds-m-horizontal--large">
                <div style="margin-top:1%">
                    <apex:outputPanel rendered="{!AND(success, isSend)}">
                        <div class="slds-notify slds-notify--alert slds-theme--success slds-theme--alert-texture alert-success"
                             style="float:left">
                            <strong>Success!</strong> Diagnosis verification sent successfully.
                        </div>
                    </apex:outputPanel>

                    <div class="slds-notify slds-notify--alert slds-theme--error slds-theme--alert-texture alert-danger"
                         style="float:left">
                        Please choose recipient
                    </div>
                    <!-- Added per IME-59 -->
                    <div class="slds-notify slds-notify--alert slds-theme--error slds-theme--alert-texture alert-danger-email"
                         style="float:left">
                        Please provide the Email for selected Medical Professional or Using Paper Process for DV.
                    </div>
                    <apex:actionStatus id="status">
                        <apex:facet name="start">
                            <div id="loadingSpinner">
                                <img src="/img/loading32.gif"/>
                                <p>Loading...</p>
                            </div>
                        </apex:facet>
                        <apex:facet name="stop">
                            <input type="button" value="Cancel" class="slds-button slds-button--neutral btn-process"
                                   onClick="cancel();"/>
                            <input type="button" value="Send Diagnosis Verification" onClick="passEmailVal();"
                                   class="slds-button slds-button--brand btn-process" style="margin-right:5px"/>
                        </apex:facet>
                    </apex:actionStatus>
                </div>
            </div>
            <apex:actionFunction name="sendDiagnosisVerification" action="{!sendDiagnosisVerification}"
                                 reRender="frm,ChangeValue" status="status"
                                 oncomplete="goToLeadPage({!success}, {!isSend})">
                <apex:param id="aname" name="Type" value=""/>
                <apex:param id="email" name="email" value=""/>
                <apex:param id="action" name="action" value=""/>
            </apex:actionFunction>
            <script>
                //IME 231
                $(document).ready(function () {
                    let availableContacts = [];
                    $('.selVal').each(function () {
                        if (!$(this).parent().parent().hasClass('hideBlock')) {
                            availableContacts.push($(this));
                        }
                    });
                    if (availableContacts.length === 1) {
                        availableContacts[0][0].checked = true;
                    }
                });

                //IME 231
                function passEmailVal() {
                    let emailTo = '';
                    let sendEmail = false;
                    let email = '';
                    let paperDV = {!currLead.Using_Paper_Process_For_DV__c}//Added per IME-59
                        $('.selVal').each(function () {
                            if ($(this).is(':checked')) {
                                emailTo = $(this).data("type");
                                sendEmail = true;
                                email = $(this).data("email");
                            }
                        });
                    if (sendEmail) {
                        let isPartASent = '{!currLead.Part_A_Sent__c}';
                        let isPartAReceived = '{!currLead.Part_A_Received__c}';
                        let confirmMsg = isPartAReceived ? "A Diagnosis Verification has already been sent and signed. " +
                            "Clicking Yes will reset all values in the DV form, and archive previous signed versions " +
                            "(in Docusign Status section) which cannot be undone."
                            : "Are you sure you want to proceed? A Diagnosis Verification has already been sent for this wish child.";
                        if (email && !paperDV) { //Added per IME-59
                            if (isPartASent) {
                                swal({
                                    title: "Are you sure you want to proceed?",
                                    text: confirmMsg +
                                        '<br/>' +
                                        '<button type="button" id="swalCancelButton" style="">No</button> ' +
                                        '<button type="button" id="swalConfirmButton" >Yes</button> ',
                                    html: true,
                                    showConfirmButton: false,
                                    type: 'warning'
                                });
                            } else {
                                sendDiagnosisVerification(emailTo, email, 'sendDv');
                            }
                        } else {
                            //Added per IM-59
                            $('.alert-danger-email').show();
                            $('.alert-danger').hide();
                        }
                    } else {
                        $('.alert-danger').show();
                        $('.alert-danger-email').hide(); //Added per IME-59
                    }
                }

                $(document).on('click', "#swalCancelButton", function () {
                    // Placeholder just to close the window and do nothing
                });

                $(document).on('click', "#swalConfirmButton", function () {
                    let emailTo = '';
                    let email = '';
                    $('.selVal').each(function () {
                        if ($(this).is(':checked')) {
                            emailTo = $(this).data("type");
                            email = $(this).data("email");
                        }
                    });
                    sendDiagnosisVerification(emailTo, email, 'sendDv');
                });

                function goToLeadPage(success, isSend) {
                    // Fail if success is false
                    if (!success) {
                        swal({
                            title: '',
                            text: 'Unable to send Diagnosis Verification',
                            type: "error",
                            confirmButtonColor: '#0057B8',
                            confirmButtonText: "Ok",
                            closeOnConfirm: false
                        });
                    } else if (isSend) {
                        let leadId = '{!currLead.Id}';
                        if (typeof (sforce) != 'undefined' && sforce.one) {
                            // Lightning
                            swal({
                                    type: "success",
                                    icon: "success",
                                    title: "Success",
                                    confirmButtonColor: "#0070d2",
                                    text: "Diagnosis verification sent successfully.",
                                    closeOnConfirm: true,
                                    closeOnCancel: true
                                },
                                function () {
                                    //IME-25 Check whether page is in console or not.
                                    if (sforce.console && sforce.console.isInConsole()) {
                                        let closeSubtab = function closeSubtab(result) {
                                            //Getting current tab Id
                                            let tabId = result.id;
                                            sforce.console.closeTab(tabId);
                                        };
                                        sforce.console.getEnclosingTabId(closeSubtab);
                                    }
                                    sforce.one.navigateToSObject(leadId);
                                });
                        } else {
                            // Classic
                            window.location.href = '/' + leadId;
                        }
                    } else if (!isSend) {
                        let leadId = '{!currLead.Id}';
                        if (typeof (sforce) != 'undefined' && sforce.one) {
                            // Lightning
                            if (sforce.console && sforce.console.isInConsole()) {
                                let closeSubtab = function closeSubtab(result) {
                                    //Getting current tab Id
                                    let tabId = result.id;
                                    sforce.console.closeTab(tabId);
                                };
                                sforce.console.getEnclosingTabId(closeSubtab);
                            }
                            sforce.one.navigateToSObject(leadId);
                        } else {
                            // Classic
                            window.location.href = '/' + leadId;
                        }
                    }
                }

                function cancel() {
                    window.history.back();
                }
            </script>

        </apex:form>
    </div>
    <style type="text/css">
        th {
            font-weight: bold !important
        }

        .successMsg {
            color: #3c763d;
            background-color: #dff0d8;
            border-color: #d6e9c6;
            padding: 10px;
            border-radius: 5px
        }

        .alert-danger {
            display: none;
            border-radius: 5px;
        }

        .alert-danger-email {
            display: none;
            border-radius: 5px;
        }

        /* Added per IME-59 */
        .alert-success {
            border-radius: 5px;
        }

        .btn-process {
            float: right;
            margin-top: 1%;
        }

        .slds {
            margin-top: 3%;
        }

        .sweet-alert {
            padding-bottom: 15px !important;
        }

        .sweet-alert fieldset {
            display: none;
        }

        #swalCancelButton {
            background: #0057B8 !important;
            opacity: .9;
        }

        #swalConfirmButton {
            background: #d33;
            opacity: .9;
        }

        .hideBlock {
            display: none;
        }

        .confirm {
            background: grey;
        }

        table {
            table-layout: fixed;
            width: 100%;
        }

        #loadingSpinner {
            float: right;
            display: flex;
            align-items: center;
        }
    </style>
</apex:page>