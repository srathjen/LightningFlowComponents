<apex:page sidebar="false" controller="cg.SDriveController" action="{!validate}" extensions="cg.SDriveControllerExtension">
<apex:outputPanel rendered="true">
<apex:styleSheet value="{!URLFOR($Resource.cg__YuiScripts, 'assets/skins/sam/skin.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.cg__YuiScripts,'treeview/assets/css/folders/tree.css')} "/>
<apex:stylesheet value="{!URLFOR($Resource.cg__YuiScripts,'container/assets/skins/sam/container.css')} "/>
<apex:stylesheet value="{!URLFOR($Resource.cg__YuiScripts,'resize/assets/skins/sam/resize.css')} "/>
<apex:stylesheet value="{!URLFOR($Resource.cg__YuiScripts,'menu/assets/skins/sam/menu.css')} "/>

<apex:includeScript value="{!URLFOR($Resource.cg__UploadScripts,'UploadScripts/jquery.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'yahoo-dom-event/yahoo-dom-event.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'element/element-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'dragdrop/dragdrop-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'resize/resize-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'container/container-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts, 'animation/animation-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'treeview/treeview-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'json/json-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'progressbar/progressbar-min.js')}" />

<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'yahoo/yahoo-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'event/event-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'connection/connection_core-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'container/container_core-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.cg__YuiScripts,'menu/menu-min.js')}" />


<apex:includeScript value="/soap/ajax/15.0/connection.js"/>
<apex:includeScript value="/soap/ajax/15.0/apex.js"/>
<apex:form >
<apex:actionFunction name="loadFolderItems" action="{!changeFolder}" rerender="FileList" status="processStatus">
  <apex:param name="objectId" assignTo="{!objectIdAT}" value="" />
</apex:actionFunction>
<apex:actionFunction name="reloadFolderItems" action="{!reloadFolderItems}" rerender="FileList" status="processStatus" />
<apex:actionFunction name="clearPasteAndReloadFolderItems" action="{!clearPasteAndReloadFolderItems}" rerender="FileList" status="processStatus" />
</apex:form>

<script>   
    
    var isValid=(function(){
      var rg1=/^[^\\/:\*\?"<>\|~]+$/; // forbidden characters \ / : * ? " < > | ~
      var rg2=/^\./; // cannot start with dot (.)
      var rg4=/^\ /; // cannot start with space ( )
      var rg3=/^(nul|prn|con|lpt[0-9]|com[0-9])(\.|$)/i; // forbidden file names
      return function isValid(fname){
        return rg1.test(fname)&&!rg2.test(fname)&&!rg3.test(fname)&&!rg4.test(fname);
      }
    })();

    // Create a namespace for our custom functions
    YAHOO.namespace("cyangate.com");

    YAHOO.cyangate.com.hideEditPanel = function()
    {
        YAHOO.cyangate.com.editPanel.hide();
    }   
    
    YAHOO.cyangate.com.showEditPanel = function()
    {
        document.getElementById("editPanel").style.display = "block";
        YAHOO.cyangate.com.editPanel.show();
        
        var descriptionTextBox = document.getElementById('{!$Component.editPanelPB.editPanelForm.editPanelBlockSection.fileDescription}');
          if(descriptionTextBox)
          {  
            if(descriptionTextBox.value.length>0)
            {
                  if (!(descriptionTextBox.createTextRange))
                    {
                       descriptionTextBox.focus();
                       descriptionTextBox.setSelectionRange(0, 9999);
                    }
                    else 
                    {
                       setSelectionRange(descriptionTextBox, 0, 9999);
                    }
            }
            else
            {
                    descriptionTextBox.focus(); 
            }
        
         }
    }
    
    YAHOO.cyangate.com.hideRenamePanel = function()
    {
        YAHOO.cyangate.com.renamePanel.hide();
    }   
    
    YAHOO.cyangate.com.showRenamePanel = function()
    {
        document.getElementById("renamePanel").style.display = "block";
        YAHOO.cyangate.com.renamePanel.show();
         var nameTextBox = document.getElementById('{!$Component.renamePanelPB.renameForm.renamePanelPBS.newFileName}');
        if(nameTextBox)
        {
            if (!(nameTextBox.createTextRange))
                {
                 nameTextBox.focus();
                 nameTextBox.setSelectionRange(0, 9999);
                }
                else 
                {
                  setSelectionRange(nameTextBox, 0, 9999);
                }
       
        }
    } 
    
    YAHOO.cyangate.com.hideSharePanel = function()
    {
        YAHOO.cyangate.com.sharePanel.hide();
        var frame = document.getElementById("shareIframe");
        var frameDoc;
        if(frame)
        {
            if (frame.contentWindow)
            {
                frame.contentWindow.document.innerHTML = '';
            }
            else if (frame.contentDocument && frame.contentDocument.document)
            {
                
                frame.contentDocument.document.innerHTML = '';
            }
        }
    }  
    
    YAHOO.cyangate.com.showSharePanel = function()
    {
        document.getElementById("sharePanel").style.display = "block";
        YAHOO.cyangate.com.sharePanel.show();
    }
    
    YAHOO.cyangate.com.hideCopyUrlPanel = function()
    {
        YAHOO.cyangate.com.copyUrlPanel.hide();
    }   
    
    YAHOO.cyangate.com.showCopyUrlPanel = function()
    {
        document.getElementById("copyUrlPanel").style.display = "block";
        YAHOO.cyangate.com.copyUrlPanel.show();
    }
    
    YAHOO.cyangate.com.hideConfirmDeletePanel = function()
    {
        YAHOO.cyangate.com.confirmDeletePanel.hide();
    }   
    
    YAHOO.cyangate.com.showConfirmDeletePanel = function()
    {
        document.getElementById("confirmDeletePanel").style.display = "block";
        YAHOO.cyangate.com.confirmDeletePanel.show();
    } 
    
    YAHOO.cyangate.com.showNewFolderPanel = function()
    {
        document.getElementById("newFolderPanel").style.display = "block";
        YAHOO.cyangate.com.newFolderPanel.show();
        var folderNameTextBox = document.getElementById('{!$Component.newFolderPanelPB.newFolderForm.newFolderPanelPBS.folderName}');
        folderNameTextBox.focus(); 
    } 
    
    YAHOO.cyangate.com.hideNewFolderPanel = function()
    {
        YAHOO.cyangate.com.newFolderPanel.hide();
    } 
    
    YAHOO.cyangate.com.showUploadPanel = function()
    {
        document.getElementById("uploadPanel").style.display = "block";
        YAHOO.cyangate.com.uploadPanel.show();
    }  
    
    YAHOO.cyangate.com.hideUploadPanel = function()
    {
        document.getElementById("uploadPanel").style.display = "none";
        YAHOO.cyangate.com.uploadPanel.hide();
        var frame = document.getElementById("uploadIframe");
        var frameDoc;
        if(frame)
        {
            if (frame.contentWindow)
            {
                frame.contentWindow.document.innerHTML = '';
            }
            else if (frame.contentDocument && frame.contentDocument.document)
            {
                
                frame.contentDocument.document.innerHTML = '';
            }
        }
    }  
    
    YAHOO.cyangate.com.showEmailPanel = function()
    {
        document.getElementById("emailPanel").style.display = "block";
        YAHOO.cyangate.com.emailPanel.show();
    }  
    
    YAHOO.cyangate.com.hideEmailPanel = function()
    {
        YAHOO.cyangate.com.emailPanel.hide();
        var frame = document.getElementById("emailIframe");
        if(frame)
        {
            if (frame.contentWindow)
            {
                frame.contentWindow.document.innerHTML = '';
            }
            else if (frame.contentDocument && frame.contentDocument.document)
            {
                
                frame.contentDocument.document.innerHTML = '';
            }
        }
    }
        
    YAHOO.cyangate.com.hideCutCopyPanel = function()
    {
        YAHOO.cyangate.com.cutCopyPanel.hide();
    } 
    
    YAHOO.cyangate.com.showCutCopyPanel = function()
    {
        document.getElementById("cutCopyPanel").style.display = "block";
        YAHOO.cyangate.com.cutCopyPanel.show();
    }
    
    YAHOO.cyangate.com.hideAttachPanel = function()
    {
        YAHOO.cyangate.com.attachPanel.hide();
    } 
    
    YAHOO.cyangate.com.showAttachPanel = function()
    {
        document.getElementById("attachPanel").style.display = "block";
        YAHOO.cyangate.com.attachPanel.show();
    }  
        
    function selectText()
    {
        var inputElem = document.getElementsByTagName("input");
        for(var i=0; i<inputElem.length; i++)
        {
            if(inputElem[i].id.indexOf("attachmentFileUrl")!=-1)
            {
               
                if (!(inputElem[i].createTextRange))
                {
                 inputElem[i].focus();
                 inputElem[i].setSelectionRange(0, 9999);
                }
                else 
                {
                  setSelectionRange(inputElem[i], 0, 9999);
                }
                
                return;
            }
        }
    }

        function setSelectionRange(input, selectionStart, selectionEnd)
        {
            
                var range = input.createTextRange();
                range.collapse(true);
                range.moveEnd('character', selectionEnd);
                range.moveStart('character', selectionStart);
                range.select();
            
        }

    // Function called when the DOM is ready to create the dialog,
    // render the dialog into the document body, add our dialog skin
    // css to the body tag, and wire up the buttons on our dialog    
    YAHOO.cyangate.com.init = function()
    {
        document.body.className = document.body.className + " yui-skin-sam";
        
         YAHOO.cyangate.com.editPanel = new YAHOO.widget.Panel(
            "editPanel",  // The id of our dialog container
            { 
                    width           :   '450px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.renamePanel = new YAHOO.widget.Panel(
            "renamePanel",  // The id of our dialog container
            { 
                    width           :   '450px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.sharePanel = new YAHOO.widget.Panel(
            "sharePanel",  // The id of our dialog container
            { 
                    width           :   '750px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   true,   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.copyUrlPanel = new YAHOO.widget.Panel(
            "copyUrlPanel",  // The id of our dialog container
            { 
                    width           :   '450px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.confirmDeletePanel = new YAHOO.widget.Panel(
            "confirmDeletePanel",  // The id of our dialog container
            { 
                    width           :   '400px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   true,   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.newFolderPanel = new YAHOO.widget.Panel(
            "newFolderPanel",  // The id of our dialog container
            { 
                    width           :   '400px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.35
                                        } 
            }
         );
         YAHOO.cyangate.com.uploadPanel = new YAHOO.widget.Panel(
            "uploadPanel",  // The id of our dialog container
            { 
                    width           :   '1080px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.25
                                        } 
            }
         );
         
         YAHOO.cyangate.com.emailPanel = new YAHOO.widget.Panel(
            "emailPanel",  // The id of our dialog container
            { 
                    width           :   '750px',
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   true,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   {!NOT(isAppleDevice)},   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.25
                                        } 
            }
         );
                  
         YAHOO.cyangate.com.cutCopyPanel = new YAHOO.widget.Panel(
            "cutCopyPanel",  // The id of our dialog container
            { 
                    width           :   '500px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   true,   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.25
                                        } 
            }
         );
         
         YAHOO.cyangate.com.attachPanel = new YAHOO.widget.Panel(
            "attachPanel",  // The id of our dialog container
            { 
                    width           :   '500px',    
                    visible         :   false,  // Should be invisible when rendered
                    draggable       :   true,   // Make the dialog draggable
                    close           :   false,  // Don't include a close title button
                    modal           :   true,   // Make it modal
                    fixedCenter     :   true,   // Keep centered if window is scrolled
                    zindex          :   40,     // Make sure it's on top of everything
                    
                    // This line adds the appear/vanish fade effect
                    effect          :   {
                                          effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.25
                                        } 
            }
         );
        
        // Render the dialog to the document.body level of the DOM
        YAHOO.cyangate.com.editPanel.render(document.body);
        YAHOO.cyangate.com.renamePanel.render(document.body);
        YAHOO.cyangate.com.sharePanel.render(document.body);
        YAHOO.cyangate.com.copyUrlPanel.render(document.body);
        YAHOO.cyangate.com.confirmDeletePanel.render(document.body);
        YAHOO.cyangate.com.newFolderPanel.render(document.body);
        YAHOO.cyangate.com.uploadPanel.render(document.body);
        YAHOO.cyangate.com.emailPanel.render(document.body);
        YAHOO.cyangate.com.cutCopyPanel.render(document.body);
        YAHOO.cyangate.com.attachPanel.render(document.body);
    }
    
    var itemMenus = new Array();
    function resetFileItems()
    {
        for (var i= 0 ; i < itemMenus.length; i++)
        {
            itemMenus[i].destroy();
        }
        itemMenus = new Array();
    }
    function showItemMenu(button)
    {
        
        var menuDiv = "basicmenu_" + button.id.split('_')[1];
        
        var basicmenu = YAHOO.util.Dom.get(menuDiv);
        
        for (var i= 0 ; i < itemMenus.length; i++)
        {
            if (itemMenus[i].srcElement.id == menuDiv)
            {
                itemMenus[i].hide();
                itemMenus[i].show();
                return;
            }
        }
        
        YAHOO.cyangate.com.oMenu = new YAHOO.widget.Menu(basicmenu, 
                { context:[button.id,"tr","br", ["beforeShow", "windowResize"]] });
        itemMenus.push(YAHOO.cyangate.com.oMenu);
        YAHOO.cyangate.com.oMenu.render("itemMenusDiv");  
        YAHOO.cyangate.com.oMenu.show();
        
    }
    

    // Add the init method to the window.load event
    YAHOO.util.Event.addListener(window, "load", YAHOO.cyangate.com.init);
     (function() {
            var Dom = YAHOO.util.Dom,
                Event = YAHOO.util.Event,
                col1 = null,
                col2 = null;
        
            Event.onDOMReady(function() {
                col1 = Dom.get('foldersColumn');
                col2 = Dom.get('filesColumn');
                var resize = new YAHOO.util.Resize('foldersColumn', {
                    handles: ['r']
                });
                resize.on('resize', function(ev) {
                    var size = parseInt(Dom.getStyle('sdriveContent', 'width'), 10);
                    var w = ev.width;
                    Dom.setStyle(col1, 'height', '');
                    Dom.setStyle(col2, 'width', (size - w - 6) + 'px');
                });
            });

        })();
        
    
</script>
<style>
.fewerMore { display: none;}
</style>
<div id="downloadArea" style="display:none"></div>
<apex:outputPanel layout="block" id="openArea" style="display: none">
     <script>
        var openFilePopupWarning =
        {
            init : function()
            {   
                if(this.popups_are_disabled() == true)
                {           
                    this.alert_to_disable_popup_blocker();
                }
            },
    
            alert_to_disable_popup_blocker : function()
            {
                var handleOK = function()
                {
                    this.hide();
                };
                
                YAHOO.cyangate.com.errorDialog = 
                    new YAHOO.widget.SimpleDialog("errorDialog", 
                         { width: "300px",
                           fixedcenter: true,
                           visible: true,
                           modal: true,
                           draggable: true,
                           close: false,
                           hideaftersubmit: true,
                           zIndex: 100,
                           text: "You have popup blocker enabled. Please disable popup blocker and try again!",
                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                           constraintoviewport: true,
                           buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                         } );
                YAHOO.cyangate.com.errorDialog.render(document.body);
                YAHOO.cyangate.com.errorDialog.show();
            },
    
            popups_are_disabled : function()
            {           
                    var popup = window.open("{!JSENCODE(openUrlForFile)}", "openFileWindow", "width=640,height=640");
                
                    if(!popup || popup.closed || typeof popup == "undefined" || typeof popup.closed == "undefined")
                    {
                        return true;
                    }
                    popup.focus();     
        

                    if(navigator && (navigator.userAgent.toLowerCase()).indexOf("chrome") > -1)
                    {           
                        var on_load_test = function(){popupWarning.test_chrome_popups(popup);};     
                        var timer = setTimeout(on_load_test, 1000);
                        return;  
                    }
            },
    
            test_chrome_popups : function(popup)
            {
                if(popup && popup.screenX != 0)
                {           
                    return true;
                }
                
                this.alert_to_disable_popup_blocker();
            }
      };
     </script>
 </apex:outputPanel>
<div id="editPanel" style="display: none" width="100%">
    <div class="hd">
        <apex:outputText value="Edit" />
    </div>  
    <div class="bd">
        <apex:pageBlock id="editPanelPB">
            <apex:form id="editPanelForm" >
                <apex:actionRegion >
                    <apex:pageMessages />
                    <apex:pageBlockSection id="editPanelBlockSection" columns="1" rendered="{!updateAllowed}">
                        <apex:inputTextArea id="fileDescription" value="{!editedFile['cg__Description__c']}" cols="40" />
                    </apex:pageBlockSection>
                    <div style="text-align: right;">
                        <apex:commandButton value="Save" 
                            oncomplete="YAHOO.cyangate.com.hideEditPanel();" action="{!saveEditedFieldValues}" 
                            rerender="FileList" rendered="{!updateAllowed}" status="processStatus" />
                        <apex:commandButton value="Cancel" immediate="true" 
                            oncomplete="YAHOO.cyangate.com.hideEditPanel();" status="processStatus" />
                    </div>
                </apex:actionRegion>
            </apex:form>
        </apex:pageBlock>
    </div>  
</div>

<div id="renamePanel" style="display: none" width="100%">
    <div class="hd">
        <apex:outputText value="Rename" />
    </div>  
    <div class="bd" id="renamePanelDiv">
        <apex:pageBlock id="renamePanelPB">
            <apex:form id="renameForm" onsubmit="javascript:renameFile();return false;">
                <apex:actionRegion >
                    <apex:pageMessages />
                    <apex:pageBlockSection id="renamePanelPBS" columns="1" rendered="{!updateAllowed}">
                        <apex:inputText id="newFileName" value="{!editedFile['cg__File_Name__c']}" size="40" />
                    </apex:pageBlockSection>
                    <div style="text-align: right;">
                        <apex:commandButton id="renameButton" value="Save" 
                            onclick="javascript:renameFile();return false;"
                            rerender="FileList" rendered="{!updateAllowed}" status="processStatus" />
                        <input class="btn" type="button" value="Cancel" onclick="YAHOO.cyangate.com.hideRenamePanel();"/>
                            <script>
                                function renameFile()
                                {
                                    var currentFolderId = '{!JSENCODE(objectIdAT)}';
                                    var oldFileId = '{!JSENCODE(editedFile['Id'])}';
                                    var oldFileNameValue = '{!JSENCODE(editedFile['cg__File_Name__c'])}';
                                    var oldFileContentType = '{!JSENCODE(editedFile['cg__Content_Type__c'])}';
                                    var newFileNameValue = document.getElementById('{!$Component.renamePanelPB.renameForm.renamePanelPBS.newFileName}').value;
                                                                        
                                    if(newFileNameValue == '')
                                    {
                                        //alert('Name cannot be blank!');
                                        
                                        var handleOK = function()
                                        {
                                            this.hide();
                                            YAHOO.cyangate.com.showRenamePanel();
                                        };
                                        
                                        YAHOO.cyangate.com.disallowedNameDialog = 
                                            new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                                 { width: "300px",
                                                   fixedcenter: true,
                                                   visible: true,
                                                   modal: true,
                                                   draggable: true,
                                                   close: false,
                                                   hideaftersubmit: true,
                                                   zIndex: 100,
                                                   text: "Name cannot be blank!",
                                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                   constraintoviewport: true,
                                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                 } );
                                        YAHOO.cyangate.com.hideRenamePanel();
                                        YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                                        YAHOO.cyangate.com.disallowedNameDialog.show();
                                        return;
                                    }
                                    
                                    if(newFileNameValue == oldFileNameValue)
                                    {
                                        //alert('Name cannot be same with the old name!');
                                        
                                        var handleOK = function()
                                        {
                                            this.hide();
                                            YAHOO.cyangate.com.showRenamePanel();
                                        };
                                        
                                        YAHOO.cyangate.com.disallowedNameDialog = 
                                            new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                                 { width: "300px",
                                                   fixedcenter: true,
                                                   visible: true,
                                                   modal: true,
                                                   draggable: true,
                                                   close: false,
                                                   hideaftersubmit: true,
                                                   zIndex: 100,
                                                   text: "Name cannot be same with the old name!",
                                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                   constraintoviewport: true,
                                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                 } );
                                        YAHOO.cyangate.com.hideRenamePanel();
                                        YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                                        YAHOO.cyangate.com.disallowedNameDialog.show();
                                        return;
                                    }
                                    
                                    if(!isValid(newFileNameValue))
                                    {
                                        //alert('Name cannot start with a space or a dot and cannot contain any of the following characters: \\ / : * ? \" < > | ~');
                                        
                                        var handleOK = function()
                                        {
                                            this.hide();
                                            YAHOO.cyangate.com.showRenamePanel();
                                        };
                                        
                                        var msg = 'Name cannot start with a space or a dot and cannot contain any of the following characters: \\ / : * ? \" < > | ~';
                                        YAHOO.cyangate.com.disallowedNameDialog = 
                                            new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                                 { width: "300px",
                                                   fixedcenter: true,
                                                   visible: true,
                                                   modal: true,
                                                   draggable: true,
                                                   close: false,
                                                   hideaftersubmit: true,
                                                   zIndex: 100,
                                                   text: msg,
                                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                   constraintoviewport: true,
                                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                 } );
                                        YAHOO.cyangate.com.hideRenamePanel();
                                        YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                                        YAHOO.cyangate.com.disallowedNameDialog.show();
                                        return;
                                    }
                                    
                                    Visualforce.remoting.Manager.invokeAction(
                                        'cg.SDriveControllerExtension.checkIfFileNameExists',
                                        newFileNameValue,currentFolderId,
                                        function(fileExistsResult, event){
                                            //alert('Event Status:' + event.status + ' - Result: ' + fileExistsResult + ' is it null? ' + (fileExistsResult == 'null'));
                                            if (event.status) {
                                                if(fileExistsResult != null)
                                                {
                                                    //alert('Cannot rename item. An item with the name you specified already exists. Specify a different name!');
                                                    
                                                    var handleOK = function()
                                                    {
                                                        this.hide();
                                                        YAHOO.cyangate.com.showRenamePanel();
                                                    };
                                                    
                                                    YAHOO.cyangate.com.disallowedNameDialog = 
                                                        new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                                             { width: "300px",
                                                               fixedcenter: true,
                                                               visible: true,
                                                               modal: true,
                                                               draggable: true,
                                                               close: false,
                                                               hideaftersubmit: true,
                                                               zIndex: 100,
                                                               text: "Cannot rename item. An item with the name you specified already exists. Specify a different name!",
                                                               icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                               constraintoviewport: true,
                                                               buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                             } );
                                                    YAHOO.cyangate.com.hideRenamePanel();
                                                    YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                                                    YAHOO.cyangate.com.disallowedNameDialog.show();
                                                    return;
                                                }
                                                else
                                                {
                                                    // copy s3 object
                                                    Visualforce.remoting.Manager.invokeAction(
                                                        'cg.SDriveController.renameS3File',
                                                        oldFileId, newFileNameValue,
                                                        function(renameS3FileResult, event){
                                                            //alert("renameS3FileResult:" + renameS3FileResult + " event.status: " + event.status);
                                                            if(event.status)
                                                            {
                                                                reloadFolderItems();
                                                                YAHOO.cyangate.com.hideRenamePanel();
                                                                return;
                                                                                
                                                                /*
                                                                // delete old file
                                                                if(oldFileContentType != 'Folder')
                                                                {
                                                                    Visualforce.remoting.Manager.invokeAction(
                                                                        'cg.SDriveController.deleteS3File',
                                                                        oldFileId,oldFileNameValue,
                                                                        function(deleteS3FileResult, event){
                                                                            //alert("deleteS3FileResult:" + deleteS3FileResult + " event.status: " + event.status);
                                                                            if(event.status)
                                                                            {
                                                                                reloadFolderItems();
                                                                                YAHOO.cyangate.com.hideRenamePanel();
                                                                                return;
                                                                            }
                                                                            else
                                                                            {
                                                                                //alert('Error occured while deleting s3 file!');
                                                                                var handleOK = function()
                                                                                {
                                                                                    this.hide();
                                                                                };
                                                                                
                                                                                YAHOO.cyangate.com.errorDialog = 
                                                                                    new YAHOO.widget.SimpleDialog("errorDialog", 
                                                                                         { width: "300px",
                                                                                           fixedcenter: true,
                                                                                           visible: true,
                                                                                           modal: true,
                                                                                           draggable: true,
                                                                                           close: false,
                                                                                           hideaftersubmit: true,
                                                                                           zIndex: 100,
                                                                                           text: "Error occured while deleting s3 file!",
                                                                                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                                                           constraintoviewport: true,
                                                                                           buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                                                         } );
                                                                                YAHOO.cyangate.com.errorDialog.render(document.body);
                                                                                YAHOO.cyangate.com.errorDialog.show();
                                                                                reloadFolderItems();
                                                                                YAHOO.cyangate.com.hideRenamePanel();
                                                                                return;
                                                                            }
                                                                        },
                                                                        {escape: true}
                                                                    );
                                                                }
                                                                else
                                                                {
                                                                    reloadFolderItems();
                                                                    YAHOO.cyangate.com.hideRenamePanel();
                                                                    return;
                                                                }
                                                                */
                                                            }
                                                            else
                                                            {
                                                                 var handleOK = function()
                                                                            {
                                                                                this.hide();
                                                                            };
                                                                            
                                                                            YAHOO.cyangate.com.errorDialog = 
                                                                                new YAHOO.widget.SimpleDialog("errorDialog", 
                                                                                     { width: "300px",
                                                                                       fixedcenter: true,
                                                                                       visible: true,
                                                                                       modal: true,
                                                                                       draggable: true,
                                                                                       close: false,
                                                                                       hideaftersubmit: true,
                                                                                       zIndex: 100,
                                                                                       text: "Error occured while renaming!",
                                                                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                                                       constraintoviewport: true,
                                                                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                                                     } );
                                                                            YAHOO.cyangate.com.errorDialog.render(document.body);
                                                                            YAHOO.cyangate.com.errorDialog.show();
                                                                            reloadFolderItems();
                                                                            YAHOO.cyangate.com.hideRenamePanel();
                                                                            return;
                                                                            
                                                               /*
                                                                Visualforce.remoting.Manager.invokeAction(
                                                                    'cg.SDriveController.deleteS3File',
                                                                    oldFileId,newFileNameValue,
                                                                    function(deleteS3FileResult, event){
                                                                        //alert("deleteS3FileResult:" + deleteS3FileResult + " event.status: " + event.status);
                                                                        if(event.status)
                                                                        {
                                                                            //alert('Error occured while renaming!');
                                                                            var handleOK = function()
                                                                            {
                                                                                this.hide();
                                                                            };
                                                                            
                                                                            YAHOO.cyangate.com.errorDialog = 
                                                                                new YAHOO.widget.SimpleDialog("errorDialog", 
                                                                                     { width: "300px",
                                                                                       fixedcenter: true,
                                                                                       visible: true,
                                                                                       modal: true,
                                                                                       draggable: true,
                                                                                       close: false,
                                                                                       hideaftersubmit: true,
                                                                                       zIndex: 100,
                                                                                       text: "Error occured while renaming!",
                                                                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                                                       constraintoviewport: true,
                                                                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                                                     } );
                                                                            YAHOO.cyangate.com.errorDialog.render(document.body);
                                                                            YAHOO.cyangate.com.errorDialog.show();
                                                                            reloadFolderItems();
                                                                            YAHOO.cyangate.com.hideRenamePanel();
                                                                            return;
                                                                        }
                                                                        else
                                                                        {
                                                                            //alert('Error occured while deleting s3 file!');
                                                                            var handleOK = function()
                                                                            {
                                                                                this.hide();
                                                                            };
                                                                            
                                                                            YAHOO.cyangate.com.errorDialog = 
                                                                                new YAHOO.widget.SimpleDialog("errorDialog", 
                                                                                     { width: "300px",
                                                                                       fixedcenter: true,
                                                                                       visible: true,
                                                                                       modal: true,
                                                                                       draggable: true,
                                                                                       close: false,
                                                                                       hideaftersubmit: true,
                                                                                       zIndex: 100,
                                                                                       text: "Error occured while deleting s3 file!",
                                                                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                                                       constraintoviewport: true,
                                                                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                                                     } );
                                                                            YAHOO.cyangate.com.errorDialog.render(document.body);
                                                                            YAHOO.cyangate.com.errorDialog.show();
                                                                            reloadFolderItems();
                                                                            YAHOO.cyangate.com.hideRenamePanel();
                                                                            return;
                                                                            }
                                                                        },
                                                                        {escape: true}
                                                                    );
                                                                    */
                                                                }
                                                            },
                                                            {escape: true}
                                                        );
                                                    }
                                                }
                                            }
                                        ,{escape: true}
                                    );
                                }
                            </script>
                    </div>
                </apex:actionRegion>
            </apex:form>
        </apex:pageBlock>
    </div>  
</div>

<div id="confirmDeletePanel" style="display: none" width="100%">
    <div class="hd">
        <apex:outputText value="Delete" />
    </div>  
    <div class="bd">
        <apex:pageBlock id="confirmDeletePanelPB">
            <apex:form >
                <apex:actionRegion >
                    <apex:pageMessages />
                    <apex:pageBlockSection columns="1" rendered="{!deleteAllowed}">
                        Are you sure?
                        <apex:outPutPanel rendered="{!isVersionedBucket && NOT(isShowVersions)&& attachmentContentType!='Folder'}"> 
                              Previous versions of the file(s) will also be deleted. 
                       </apex:outputPanel>
                    </apex:pageBlockSection>
                    <div style="text-align: right;">
                        <apex:actionStatus id="deleteStatus">
                            <apex:facet name="stop">
                                <apex:commandButton value="Yes" 
                                    oncomplete="YAHOO.cyangate.com.hideConfirmDeletePanel();" action="{!deleteFile}"
                                    rerender="FileList" rendered="{!deleteAllowed}" status="deleteStatus" />
                            </apex:facet>
                            <apex:facet name="start">
                                <apex:commandButton value="Processing..." disabled="true" status="deleteStatus" />
                            </apex:facet>
                        </apex:actionStatus>
                        <apex:commandButton value="Cancel" immediate="true" 
                            oncomplete="YAHOO.cyangate.com.hideConfirmDeletePanel();" status="processStatus"/>
                    </div>
                </apex:actionRegion>
            </apex:form>
       </apex:pageBlock>
    </div>  
</div>

<div id="copyUrlPanel" style="display: none" width="100%">
    <div class="hd">
        <apex:outputText value="Copy URL" />
    </div>  
    <div class="bd">
        <apex:pageBlock id="copyUrlPanelPB">
            <apex:form >
                <apex:actionRegion >
                    <apex:pageBlockSection columns="1">
                        <apex:outputLabel value="Click Select URL, then right click the highlighted text and select Copy from the menu." 
                            for="attachmentFileUrl" />
                        <apex:inputText id="attachmentFileUrl" size="50" value="{!copyUrl}" />
                    </apex:pageBlockSection>
                    <div style="text-align: right;">
                        <b><a href="javascript:selectText();">Select URL</a></b>
                        &nbsp;|&nbsp;
                        <b><a href="javascript:YAHOO.cyangate.com.hideCopyUrlPanel();">Close</a></b>
                    </div>
                </apex:actionRegion>
            </apex:form>
        </apex:pageBlock> 
    </div>
</div>

<div id="newFolderPanel" style="display: none" width="100%" >
  <div class="hd">
    <apex:outputText value="New Folder" />
  </div>  
  <div class="bd">
  <apex:pageBlock id="newFolderPanelPB">
    <apex:form id="newFolderForm" onsubmit="javascript:createFolder();return false;">
      <apex:actionRegion >
      <apex:pageMessages />
          <apex:pageBlockSection columns="1" id="newFolderPanelPBS">
                <apex:inputField id="folderName" onkeypress="return noEnter(event);" label="Folder Name" value="{!newFolder.cg__File_Name__c}"  />
                <apex:inputField id="folderDescription" value="{!newFolder.cg__Description__c}" />
          </apex:pageBlockSection>
          <apex:inputCheckbox id="inheritSharing" selected="true" 
                title="Inherit Sharing from Parent Folder" rendered="{!shareEnabled && objectIdAT != ''}" />
                <apex:outputText value="Inherit Sharing from Parent Folder" rendered="{!shareEnabled && objectIdAT != ''}" />
        <div style="text-align: right;" >
            <apex:commandButton value="Create" 
                onclick="javascript:createFolder();return false;"
                rerender="newFolderPanelPB" rendered="{!fileCreatable}" status="processStatus" />                        
            <input class="btn" type="button" value="Cancel" onclick="YAHOO.cyangate.com.hideNewFolderPanel();"/>
            <script>
                    function noEnter(ev)
                    {
                        if (window.event && window.event.keyCode == 13 || ev.which == 13)
                        {
                            return false;
                        }
                        else
                        {
                            return true;
                        }
                    }
                    
                    function createFolder()
                    {
                        var currentFolderId = '{!JSENCODE(objectIdAT)}';
                        var shareEnabled = '{!shareEnabled}';
                        
                        var newFolderNameValue = document.getElementById('{!$Component.newFolderPanelPB.newFolderForm.newFolderPanelPBS.folderName}').value;
                        var folderDescription = document.getElementById('{!$Component.newFolderPanelPB.newFolderForm.newFolderPanelPBS.folderDescription}').value;
                        
                        var inheritSharingValue = false;
                        if(shareEnabled == 'true' && currentFolderId != '')
                        {
                            
                            inheritSharingValue = document.getElementById('{!$Component.newFolderPanelPB.newFolderForm.inheritSharing}').checked;
                        }
                        
                        if(newFolderNameValue == '')
                        {
                            //alert('Name cannot be blank!');
                            
                            var handleOK = function()
                            {
                                this.hide();
                                YAHOO.cyangate.com.showNewFolderPanel();
                            };
                            
                            YAHOO.cyangate.com.disallowedNameDialog = 
                                new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                     { width: "300px",
                                       fixedcenter: true,
                                       visible: true,
                                       modal: true,
                                       draggable: true,
                                       close: false,
                                       hideaftersubmit: true,
                                       zIndex: 100,
                                       text: "Name cannot be blank!",
                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                       constraintoviewport: true,
                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                     } );
                            YAHOO.cyangate.com.hideNewFolderPanel();
                            YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                            YAHOO.cyangate.com.disallowedNameDialog.show();
                            return;
                        }
                                                            
                        if(!isValid(newFolderNameValue))
                        {
                            //alert('Name cannot start with a space or a dot and cannot contain any of the following characters: \\ / : * ? \" < > | ~');
                            
                            var handleOK = function()
                            {
                                this.hide();
                                YAHOO.cyangate.com.showNewFolderPanel();
                            };
                            
                            var msg = 'Name cannot start with a space or a dot and cannot contain any of the following characters: \\ / : * ? \" < > | ~';
                            YAHOO.cyangate.com.disallowedNameDialog = 
                                new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                     { width: "300px",
                                       fixedcenter: true,
                                       visible: true,
                                       modal: true,
                                       draggable: true,
                                       close: false,
                                       hideaftersubmit: true,
                                       zIndex: 100,
                                       text: msg,
                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                       constraintoviewport: true,
                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                     } );
                            YAHOO.cyangate.com.hideNewFolderPanel();
                            YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                            YAHOO.cyangate.com.disallowedNameDialog.show();
                            return;
                        }
                        
                        Visualforce.remoting.Manager.invokeAction(
                            'cg.SDriveControllerExtension.checkIfFileNameExists',
                            newFolderNameValue,currentFolderId,
                            function(fileExistsResult, event){
                                //alert('Event Status:' + event.status + ' - Result: ' + fileExistsResult + ' is it null? ' + (fileExistsResult == 'null'));
                                if (event.status)
                                {
                                    if(fileExistsResult != null)
                                    {
                                        //alert('Cannot create item. An item with the name you specified already exists. Specify a different name!');
                                        
                                        var handleOK = function()
                                        {
                                            this.hide();
                                            YAHOO.cyangate.com.showNewFolderPanel();
                                        };
                                        
                                        YAHOO.cyangate.com.disallowedNameDialog = 
                                            new YAHOO.widget.SimpleDialog("disallowedNameDialog", 
                                                 { width: "300px",
                                                   fixedcenter: true,
                                                   visible: true,
                                                   modal: true,
                                                   draggable: true,
                                                   close: false,
                                                   hideaftersubmit: true,
                                                   zIndex: 100,
                                                   text: "Cannot create item. An item with the name you specified already exists. Specify a different name!",
                                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                   constraintoviewport: true,
                                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                 } );
                                        YAHOO.cyangate.com.hideNewFolderPanel();
                                        YAHOO.cyangate.com.disallowedNameDialog.render(document.body);
                                        YAHOO.cyangate.com.disallowedNameDialog.show();
                                        return;
                                    }
                                    else
                                    {
                                        // create new folder
                                        Visualforce.remoting.Manager.invokeAction(
                                            'cg.SDriveController.createNewFolder',
                                            newFolderNameValue,folderDescription,inheritSharingValue,currentFolderId,
                                            function(createNewFolderResult, event){
                                                //alert('Event Status:' + event.status + ' - Result: ' + createNewFolderResult + ' is it null? ' + (createNewFolderResult == 'null'));
                                                if (event.status)
                                                {
                                                    reloadFolderItems();
                                                    YAHOO.cyangate.com.hideNewFolderPanel();
                                                    return;
                                                }
                                                else
                                                {
                                                    //alert('Folder creation failed. Error: ' + event.message);
                                                    
                                                    var handleOK = function()
                                                    {
                                                        this.hide();
                                                    };
                                                    
                                                    YAHOO.cyangate.com.errorDialog = 
                                                        new YAHOO.widget.SimpleDialog("errorDialog", 
                                                             { width: "300px",
                                                               fixedcenter: true,
                                                               visible: true,
                                                               modal: true,
                                                               draggable: true,
                                                               close: false,
                                                               hideaftersubmit: true,
                                                               zIndex: 100,
                                                               text: "Folder creation failed. Error: " + event.message,
                                                               icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                               constraintoviewport: true,
                                                               buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                             } );
                                                    YAHOO.cyangate.com.errorDialog.render(document.body);
                                                    YAHOO.cyangate.com.errorDialog.show();
                                                    YAHOO.cyangate.com.hideNewFolderPanel();
                                                    return;
                                                }
                                            }
                                            ,{escape: true}
                                        );
                                    }
                                }
                            }
                            ,{escape: true}
                        );
                    }
            </script>
        </div>
      </apex:actionRegion>
    </apex:form>
    </apex:pageBlock>
  </div>  
 </div>
 
 <script>
     var popup = null;
     var uploadPopupWindow = null;
 </script>
 <apex:outputPanel id="initUploadManager">
 <div id="uploadPanel" style="display: none" width="100%">
    <div class="hd">
        <apex:outputText value="Upload" />
    </div>  
    <div class="bd">
    <apex:outputPanel id="uploadPanelPB">
             <script>
             var uploadUrl = '{!JSENCODE(uploadUrl)}'; 
             var uploadAsPopup = {!uploadAsPopup}; 
             var checkTimer;
            
             function displayUpload()
             {
                 if (uploadAsPopup)
                 {
                     uploadPopupWarning.init();
                 }
                 else
                 {
                     YAHOO.cyangate.com.showUploadPanel();
                 }
                 
             }
             
             function uploadCompleted()
             {
                reloadFolderItems();
                YAHOO.cyangate.com.hideUploadPanel();
             }
             </script>
                    
             <apex:outputPanel id="uploadPopupScripts" rendered="{!uploadAsPopup}">
             <script> 
                 var uploadPopupWarning =
                 {
                    init : function()
                    {   
                        if(!uploadPopupWindow  || uploadPopupWindow.closed || typeof uploadPopupWindow == "undefined" || typeof uploadPopupWindow.closed == "undefined")
                        {            
                            if(this.popups_are_disabled() == true)
                            {           
                                this.alert_to_disable_popup_blocker();
                            }
                        }
                        else
                        {
                            uploadPopupWindow.focus();
                        }
             
                    },
            
                    alert_to_disable_popup_blocker : function()
                    {
                        //alert("You have popup blocker enabled. Please disable popup blocker and try again!");
                        var handleOK = function()
                        {
                            this.hide();
                        };
                        
                        YAHOO.cyangate.com.errorDialog = 
                            new YAHOO.widget.SimpleDialog("errorDialog", 
                                 { width: "300px",
                                   fixedcenter: true,
                                   visible: true,
                                   modal: true,
                                   draggable: true,
                                   close: false,
                                   hideaftersubmit: true,
                                   zIndex: 100,
                                   text: "You have popup blocker enabled. Please disable popup blocker and try again!",
                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                   constraintoviewport: true,
                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                 } );
                        YAHOO.cyangate.com.errorDialog.render(document.body);
                        YAHOO.cyangate.com.errorDialog.show();
                    },
            
                    popups_are_disabled : function()
                    {
                        uploadPopupWindow = window.open(uploadUrl,'Upload','resizable=yes,width=1050,height=550, top=10, left=10');
                        checkTimer = setInterval(checkWindowExists,500);
                                                                        
                        if(!uploadPopupWindow || uploadPopupWindow.closed || typeof uploadPopupWindow == "undefined" || typeof uploadPopupWindow.closed == "undefined")
                        {
                            return true;
                        }
                        
                        uploadPopupWindow.focus();
                            
                        //
                        // Chrome popup detection requires that the popup validates itself - so we need to give
                        // the popup time to load, then call js on the popup itself
                        //
                        if(navigator && (navigator.userAgent.toLowerCase()).indexOf("chrome") > -1)
                        {           
                            var on_load_test = function(){uploadPopupWarning.test_chrome_popups(uploadPopupWindow);};     
                            var timer = setTimeout(on_load_test, 1000);
                            return;  
                        }
                    },
            
                    test_chrome_popups: function(uploadPopupWindow)
                    {
                        if(uploadPopupWindow && uploadPopupWindow.screenX != 0)
                        {   
                            return true;
                        }
                        
                        //
                        // If the popup js fails - popups are blocked
                        //
                        this.alert_to_disable_popup_blocker();
                    }
                  };
                 
                 function checkWindowExists()
                 {
                     if(uploadPopupWindow == null || uploadPopupWindow == undefined || uploadPopupWindow.closed)
                     {
                         clearInterval(checkTimer);
                         reloadFolderItems();
                     }
                 }
                     
             </script>
            </apex:outputPanel>
               
        <apex:iframe id="uploadIframe" rendered="{!uploadUrl != null && NOT(uploadAsPopup)}" src="{!uploadUrl}" width="100%" height="550px"/>
      
        </apex:outputPanel>
    </div>  
</div>
</apex:outputPanel>
<div id="emailPanel" style="display: none" width="100%" >
  <div class="hd">
    <apex:outputText value="Email" />
  </div>  
  <div class="bd">
    <apex:outputPanel layout="block" id="emailPanelPB">
        <apex:pageMessages />
        <apex:form id="cancelEmailForm">
        <apex:commandButton rendered="{!pageHasErrors}" onclick="YAHOO.cyangate.com.hideEmailPanel();return false;" title="Close" value="Close" style="float: right;"/>
        </apex:form>
        <apex:iframe id="emailIframe" rendered="{!emailWidgetUrl != null && NOT(pageHasErrors)}" src="{!emailWidgetUrl}" width="100%" height="600px" scrolling="true" />
    </apex:outputPanel>
  </div>  
</div>
 <div id="sharePanel" style="display: none;" width="100%" >
  <div class="hd">
    <apex:outputText value="Share" />
  </div>  
  <div class="bd">
    <apex:outputPanel layout="block" id="sharePanelPB">
        <apex:pageMessages />
        <apex:form id="cancelShareForm">
        <apex:commandButton rendered="{!pageHasErrors}" onclick="YAHOO.cyangate.com.hideSharePanel();return false;" title="Close" value="Close" style="float: right;"/>
        </apex:form>
       
        <apex:iframe id="shareIframe" rendered="{!shareWidgetUrl != null && NOT(pageHasErrors) && fileUpdateable}" src="{!shareWidgetUrl}" width="100%" height="400px"/>
    </apex:outputPanel>
  </div>  
 </div>
 <style>
#sharePanel .bd
{
    overflow:auto;
}
#sharePanel.show-scrollbars .underlay {
    overflow: visible;
}
 </style>
 
 <div id="cutCopyPanel" style="display: none" width="100%" >
  <div class="hd">
    <apex:outputText value="Paste" />
  </div>  
  <div class="bd">
    <apex:outputPanel id="cutCopyPanelPB">
        <apex:pageMessages />
        <apex:form id="cancelCutCopyForm">
        <apex:commandButton rendered="{!pageHasErrors}" onclick="YAHOO.cyangate.com.hideCutCopyPanel();return false;" title="Close" value="Close" style="float: right;"/>
        
        <script>
        if ({!pageHasErrors})
        {
             YAHOO.cyangate.com.showCutCopyPanel();
        }
        var cutCopyItems = YAHOO.lang.JSON.parse('{!JSENCODE(cutCopyItemsAsJson)}');
        var cutCopyItemNames = YAHOO.lang.JSON.parse('{!JSENCODE(cutCopyItemNamesAsJson)}');
        var cutRequested = {!cutRequested};
        var currentFolderId = '{!JSENCODE(objectIdAT)}';
        var sourceFolderId = '{!JSENCODE(sourceFolderId)}';
        var currentItemNumber = 1;
        var cutCopyProgressBar;
        var currentWIPFile = null;
        var cancelRequested = false;
        var inheritSharingRequested = false;
        var customerPortalUser = {!isCustomerPortalUser};
        
        function displayCopyPastePanel()
        {
            if(currentFolderId == sourceFolderId)
            {
                //alert('You cannot paste to the same folder, please select another folder and try again!');
                var handleOK = function()
                {
                    this.hide();
                };
                
                YAHOO.cyangate.com.errorDialog = 
                    new YAHOO.widget.SimpleDialog("errorDialog", 
                         { width: "300px",
                           fixedcenter: true,
                           visible: true,
                           modal: true,
                           draggable: true,
                           close: false,
                           hideaftersubmit: true,
                           zIndex: 100,
                           text: "You cannot paste to the same folder, please select another folder and try again!",
                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                           constraintoviewport: true,
                           buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                         } );
                YAHOO.cyangate.com.errorDialog.render(document.body);
                YAHOO.cyangate.com.errorDialog.show();
                return;
            }
            
            cutCopyProgressBar = new YAHOO.widget.ProgressBar({
                value:0,
                minValue:0,
                maxValue:cutCopyItems.length,
                width:'400px',
                height:'25px',
                ariaTextTemplate:'Pasting {value} of {maxValue} item(s)...'
                }).render('cutCopyProgressBar');
                cutCopyProgressBar.on('valueChange',function (event) {
                    YAHOO.util.Dom.get('cutCopyProgressBarLabel').innerHTML = 'Pasting ' + cutCopyItemNames[event.newValue] + ' [' + (event.newValue + 1) + ' of ' + cutCopyItems.length + '] ...';
                });
            
            var handleYesShare = function ()
                {
                    inheritSharingRequested = true;
                    this.hide();
                    processItem();
                };
                
            var handleNoShare = function ()
                {
                    inheritSharingRequested = false;
                    this.hide();
                    processItem();
                };
            
            YAHOO.cyangate.com.inheritSharingDialog = 
                new YAHOO.widget.SimpleDialog("inheritSharingDialog", 
                     { width: "300px",
                       fixedcenter: true,
                       visible: true,
                       modal: true,
                       draggable: true,
                       close: false,
                       hideaftersubmit: true,
                       zIndex: 50,
                       text: "Do you want to bring the current sharings with the " + (cutRequested ? "cut" : "copied") + " items(s)?",
                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                       constraintoviewport: true,
                       buttons: [ { text:"Yes", handler:handleYesShare, isDefault:true },
                                  { text:"No", handler:handleNoShare }]
                     } );
            
            if(customerPortalUser)
            {
                inheritSharingRequested = false;
                processItem();
            }
            else
            {
                YAHOO.cyangate.com.inheritSharingDialog.render(document.body);
                YAHOO.cyangate.com.inheritSharingDialog.show();
            }
            
        }
        
        function goToNextItem()
        {
            if(cancelRequested) 
            {
                cancelPaste();
                return;
            }
            
            YAHOO.cyangate.com.showCutCopyPanel();
            
            currentItemNumber++;
            processItem();
        }
        
        function processItem()
        {            
            cutCopyProgressBar.set('value', currentItemNumber-1);
            if (cutCopyItems.length >= currentItemNumber)
            {                
                YAHOO.cyangate.com.showCutCopyPanel();
            
                //alert('calling checkIfFileExists(' + cutCopyItems[currentItemNumber - 1] + ',' + currentFolderId);
                Visualforce.remoting.Manager.invokeAction(
                    'cg.SDriveControllerExtension.checkIfFileExists',
                    cutCopyItems[currentItemNumber - 1],currentFolderId,
                    function(fileExistsResult, event){
                        //alert('Event Status:' + event.status + ' - Result: ' + fileExistsResult + ' is it null? ' + (fileExistsResult == 'null'));
                        if (event.status) {
                            if(fileExistsResult != null)
                            {
                                var handleYes = function ()
                                    {
                                        Visualforce.remoting.Manager.invokeAction(
                                            'cg.SDriveController.trydeletingExistingFile',
                                            fileExistsResult,
                                            function(tryDeletingExistingFileResult, event){
                                                if(event.status)
                                                {
                                                    Visualforce.remoting.Manager.invokeAction(
                                                        'cg.SDriveController.deleteExistingFile',
                                                        fileExistsResult,
                                                        function(deleteExistingFileResult, event){
                                                            if(event.status)
                                                            {
                                                                finishPasting();
                                                            }
                                                            else
                                                            {
                                                                //alert('Delete operation for the existing file failed: ' + event.message);
                                                                
                                                                var handleOK = function()
                                                                {
                                                                    this.hide();
                                                                    goToNextItem();
                                                                };
                                                                
                                                                YAHOO.cyangate.com.permissionDialog = 
                                                                    new YAHOO.widget.SimpleDialog("permissionDialog", 
                                                                         { width: "300px",
                                                                           fixedcenter: true,
                                                                           visible: true,
                                                                           modal: true,
                                                                           draggable: true,
                                                                           close: false,
                                                                           hideaftersubmit: true,
                                                                           zIndex: 50,
                                                                           text: "Delete operation for the existing file failed: " + event.message,
                                                                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                                           constraintoviewport: true,
                                                                           buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                                         } );
                                                                YAHOO.cyangate.com.hideCutCopyPanel();
                                                                YAHOO.cyangate.com.permissionDialog.setHeader("Permission Error!");
                                                                YAHOO.cyangate.com.permissionDialog.render(document.body);
                                                                YAHOO.cyangate.com.permissionDialog.show();
                                                                
                                                            }
                                                        },
                                                        {escape: true}
                                                    );
                                                }
                                                else
                                                {
                                                    //alert('Delete operation for the existing file failed: ' + event.message);
                                                    
                                                    var handleOK = function()
                                                    {
                                                        this.hide();
                                                        goToNextItem();
                                                    };
                                                    
                                                    YAHOO.cyangate.com.permissionDialog = 
                                                        new YAHOO.widget.SimpleDialog("permissionDialog", 
                                                             { width: "300px",
                                                               fixedcenter: true,
                                                               visible: true,
                                                               modal: true,
                                                               draggable: true,
                                                               close: false,
                                                               hideaftersubmit: true,
                                                               zIndex: 50,
                                                               text: "Delete operation for the existing file failed: " + event.message,
                                                               icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                                               constraintoviewport: true,
                                                               buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                                             } );
                                                    YAHOO.cyangate.com.hideCutCopyPanel();
                                                    YAHOO.cyangate.com.permissionDialog.setHeader("Permission Error!");
                                                    YAHOO.cyangate.com.permissionDialog.render(document.body);
                                                    YAHOO.cyangate.com.permissionDialog.show();
                                                }
                                            },
                                            {escape: true}
                                        );
                                            
                                        this.hide();
                                    };
                                    
                                var handleNo = function ()
                                    {
                                        goToNextItem();
                                        this.hide();
                                    };
                                var handleCancel = function ()
                                    {
                                        cancelPaste();
                                        this.hide();
                                    };
                                
                                YAHOO.cyangate.com.overwriteDialog = 
                                    new YAHOO.widget.SimpleDialog("overwriteDialog", 
                                         { width: "300px",
                                           fixedcenter: true,
                                           visible: true,
                                           modal: true,
                                           draggable: true,
                                           close: false,
                                           hideaftersubmit: true,
                                           zIndex: 50,
                                           text: "There is already a file with the name " + cutCopyItemNames[currentItemNumber - 1] + ". Do you want to overwrite?",
                                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                           constraintoviewport: true,
                                           buttons: [ { text:"Yes", handler:handleYes, isDefault:true },
                                                      { text:"No",  handler:handleNo },
                                                      { text:"Cancel",  handler:handleCancel } ]
                                         } );
                                YAHOO.cyangate.com.hideCutCopyPanel();
                                YAHOO.cyangate.com.overwriteDialog.render(document.body);
                                YAHOO.cyangate.com.overwriteDialog.show();
                            }
                            else
                            {
                                finishPasting();
                            }
                        }
                        else
                        {
                            //alert('An error occured: ' + event.message);
                        }
                    }, 
                    {escape: true}
                );
                
            }
            else
            {
                if(cutRequested)
                {
                    clearPasteAndReloadFolderItems();
                }
                else
                {
                    reloadFolderItems();
                }
                
                YAHOO.cyangate.com.hideCutCopyPanel();
            } 
        }
        function finishPasting()
        {
            if(cancelRequested) 
            {
                cancelPaste();
                return;
            }
            
            YAHOO.cyangate.com.showCutCopyPanel();
                        
            //alert('is cut requested?' + cutRequested);
            if(cutRequested)
            {
                Visualforce.remoting.Manager.invokeAction(
                    'cg.SDriveController.finishCutting',
                    cutCopyItems[currentItemNumber - 1],currentFolderId, inheritSharingRequested,
                    function(finishPastingResult, event){
                        if(event.status)
                        {
                            goToNextItem();
                        }
                        else
                        {
                            //alert('Cut operation failed for file: ' + cutCopyItemNames[currentItemNumber - 1] + " Error Message: " + event.message);
                            
                            var handleOK = function()
                                {
                                    this.hide();
                                    goToNextItem();
                                };
                            
                            YAHOO.cyangate.com.permissionDialog = 
                                new YAHOO.widget.SimpleDialog("permissionDialog", 
                                     { width: "300px",
                                       fixedcenter: true,
                                       visible: true,
                                       modal: true,
                                       draggable: true,
                                       close: false,
                                       hideaftersubmit: true,
                                       zIndex: 50,
                                       text: "Cut operation failed for file: " + cutCopyItemNames[currentItemNumber - 1] + " Error Message: " + event.message,
                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                       constraintoviewport: true,
                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                     } );
                            YAHOO.cyangate.com.hideCutCopyPanel();
                            YAHOO.cyangate.com.permissionDialog.setHeader("Permission Error!");
                            YAHOO.cyangate.com.permissionDialog.render(document.body);
                            YAHOO.cyangate.com.permissionDialog.show();
                            
                        }
                    },
                    {escape: true}
                );
            }
            else
            {
                Visualforce.remoting.Manager.invokeAction(
                    'cg.SDriveController.copySalesforceObject',
                    cutCopyItems[currentItemNumber - 1],currentFolderId, inheritSharingRequested,
                    function(copySalesforceObjectResult, event){
                        //alert('copySalesforceObject status: ' + event.status + ' copySalesforceObjectResult : ' + copySalesforceObjectResult);
                        if(event.status || copySalesforceObjectResult != null)
                        {
                            if(cancelRequested) 
                            {
                                cancelPaste();
                                return;
                            }
                            //alert("copyS3File:" + copySalesforceObjectResult);
                            Visualforce.remoting.Manager.invokeAction(
                                'cg.SDriveController.copyS3File',
                                cutCopyItems[currentItemNumber - 1],copySalesforceObjectResult,
                                function(copyS3FileResult, event){
                                    //alert("copyS3FileResult:" + copyS3FileResult + " event.status: " + event.status);
                                    if(event.status)
                                    {
                                        currentWIPFile = null;
                                        goToNextItem();
                                    }
                                    else
                                    {
                                        Visualforce.remoting.Manager.invokeAction(
                                                'cg.SDriveController.deleteExistingFile',
                                                copyS3FileResult,
                                                function(deleteExistingFileResult, event){
                                                    if(event.status)
                                                    {
                                                        currentWIPFile = null;
                                                        //alert('Copy operation during Amazon copy failed for file: ' + cutCopyItemNames[currentItemNumber - 1] + " Error Message: " + event.message);
                                                    }
                                                    else
                                                    {
                                                        //alert('Copy operation during Amazon copy failed for file: ' + cutCopyItemNames[currentItemNumber - 1] + " and could not cleanup the temp file. Error Message: " + event.message);
                                                    }
                                                    goToNextItem();
                                                },
                                                {escape: true}
                                            );
                                    }
                                },
                                {escape: true}
                            );
                        }
                        else
                        {
                            //alert('Paste operation failed during data copy for file: ' + cutCopyItemNames[currentItemNumber - 1] + " Error Message: " + event.message);
                            
                            var handleOK = function()
                                {
                                    this.hide();
                                    goToNextItem();
                                };
                            
                            YAHOO.cyangate.com.permissionDialog = 
                                new YAHOO.widget.SimpleDialog("permissionDialog", 
                                     { width: "300px",
                                       fixedcenter: true,
                                       visible: true,
                                       modal: true,
                                       draggable: true,
                                       close: false,
                                       hideaftersubmit: true,
                                       zIndex: 50,
                                       text: "Paste operation failed during data copy for file: " + cutCopyItemNames[currentItemNumber - 1] + " Error Message: " + event.message,
                                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                       constraintoviewport: true,
                                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                     } );
                            YAHOO.cyangate.com.hideCutCopyPanel();
                            YAHOO.cyangate.com.permissionDialog.setHeader("Permission Error!");
                            YAHOO.cyangate.com.permissionDialog.render(document.body);
                            YAHOO.cyangate.com.permissionDialog.show();
                        }
                    },
                    {escape: true}
                );
            }
        }

        
        function requestCancel()
        {
            cancelRequested = true;
            YAHOO.util.Dom.get('cutCopyProgressBarLabel').innerHTML = 'Canceling ...';
        }
        
        function cancelPaste()
        {
            if (currentWIPFile != null)
            {
                Visualforce.remoting.Manager.invokeAction(
                    'cg.SDriveController.deleteExistingFile',
                    copyS3FileResult,
                    function(deleteExistingFileResult, event){
                        if(!event.status)
                        {
                            //alert('Could not cleanup temp file!'); 
                        }
                        if(cutRequested)
                        {
                            clearPasteAndReloadFolderItems();
                        }
                        else
                        {
                            reloadFolderItems();
                        }
                        YAHOO.cyangate.com.hideCutCopyPanel();
                    },
                    {escape: true}
                );
            }
            else
            {
                if(cutRequested)
                {
                    clearPasteAndReloadFolderItems();
                }
                else
                {
                    reloadFolderItems();
                }
                YAHOO.cyangate.com.hideCutCopyPanel();
            }
        }
        </script>
        <apex:outputPanel id="cutPasteProgressPanel" rendered="{!NOT(pageHasErrors)}" style="height:300px">
            <center>
                <div id="cutCopyProgressBarLabel" style="height:20px"></div>
                <div id="cutCopyProgressBar" style="height:50px"></div>
            </center>
            
            <apex:commandButton onclick="requestCancel();return false;" title="Cancel" 
                value="Cancel" style="float:right;" status="processStatus" />
        </apex:outputPanel>
        </apex:form>
        <br />
    </apex:outputPanel>
  </div>
 </div>
 
 <div id="attachPanel" style="display: none" width="100%" >
  <div class="hd">
    <apex:outputText value="Attach" />
  </div>  
  <div class="bd">
    <apex:outputPanel id="attachPanelPB">
        <apex:pageMessages />
        <apex:form id="cancelAttachForm">
        <apex:commandButton rendered="{!pageHasErrors}" onclick="YAHOO.cyangate.com.hideAttachPanel();return false;" title="Close" value="Close" style="float: right;"/>
        
        <script>
        if ({!pageHasErrors})
        {
             YAHOO.cyangate.com.showAttachPanel();
        }
        var attachItems = YAHOO.lang.JSON.parse('{!JSENCODE(attachItemsAsJson)}');
        var attachItemNames = YAHOO.lang.JSON.parse('{!JSENCODE(attachItemNamesAsJson)}');
        var currentFolderId = '{!JSENCODE(objectIdAT)}';
        var currentItemNumber = 1;
        var attachProgressBar;
        var currentWIPFile = null;
        var cancelRequested = false;
        var inheritSharingRequested = false;
                
        function displayAttachPanel()
        {
            if(attachItems != null && attachItems != '')
            {        
                attachProgressBar = new YAHOO.widget.ProgressBar({
                    value:0,
                    minValue:0,
                    maxValue:attachItems.length,
                    width:'400px',
                    height:'25px',
                    ariaTextTemplate:'Attaching {value} of {maxValue} item(s)...'
                    }).render('attachProgressBar');
                    attachProgressBar.on('valueChange',function (event) {
                        YAHOO.util.Dom.get('attachProgressBarLabel').innerHTML = 'Attaching ' + attachItemNames[event.newValue] + ' [' + (event.newValue + 1) + ' of ' + attachItems.length + '] ...';
                    });
                
                processItem(); 
            }           
        }
        
        function goToNextItem()
        {
            if(cancelRequested) 
            {
                cancelAttach();
                return;
            }
            
            YAHOO.cyangate.com.showAttachPanel();
            
            currentItemNumber++;
            processItem();
        }
        
        function processItem()
        {            
            attachProgressBar.set('value', currentItemNumber-1);
            if (attachItems.length >= currentItemNumber)
            {                
                finishAttaching();                
            }
            else
            {
                var handleYes = function ()
                    {
                        this.hide();
                        reloadFolderItems();
                    };
                var handleNo = function ()
                    {
                        this.hide();
                        attachCompleted();
                    };
                
                YAHOO.cyangate.com.continueAttachDialog = 
                    new YAHOO.widget.SimpleDialog("continueAttachDialog", 
                         { width: "300px",
                           fixedcenter: true,
                           visible: true,
                           modal: true,
                           draggable: true,
                           close: false,
                           hideaftersubmit: true,
                           zIndex: 50,
                           text: "Attach completed. Do you want to attach more files?",
                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                           constraintoviewport: true,
                           buttons: [ { text:"Yes", handler:handleYes },
                                      { text:"No",  handler:handleNo, isDefault:true }]
                         } );
                YAHOO.cyangate.com.hideAttachPanel();
                YAHOO.cyangate.com.continueAttachDialog.render(document.body);
                YAHOO.cyangate.com.continueAttachDialog.show();
            } 
        }
        function finishAttaching()
        {
            if(cancelRequested) 
            {
                cancelAttach();
                return;
            }
            
            var targetNamespacePrefix = '{!JSENCODE($CurrentPage.parameters.namespacePrefix)}';
            var targetObjectFileName = '{!JSENCODE($CurrentPage.parameters.customObjectFileName)}';
            var targetObjectId = '{!JSENCODE($CurrentPage.parameters.objectId)}';
            var targetFolderId = '{!JSENCODE($CurrentPage.parameters.currentFolderId)}';
            var relationshipName = '{!JSENCODE($CurrentPage.parameters.relationshipName)}';
            var privateEnabled = '{!JSENCODE($CurrentPage.parameters.privateEnabled)}';
                                  
            YAHOO.cyangate.com.showAttachPanel();
            
            Visualforce.remoting.Manager.invokeAction(
                'cg.SDriveController.copySalesforceObjectForAttach',
                attachItems[currentItemNumber - 1], targetNamespacePrefix, targetObjectFileName,
                targetObjectId, targetFolderId, relationshipName, privateEnabled,
                function(copySalesforceObjectResult, event){
                    //alert('copySalesforceObject status: ' + event.status + ' copySalesforceObjectResult : ' + copySalesforceObjectResult);
                    if(event.status || copySalesforceObjectResult != null)
                    {
                        if(cancelRequested) 
                        {
                            cancelAttach();
                            return;
                        }
                        //alert("copyS3File:" + copySalesforceObjectResult);
                        Visualforce.remoting.Manager.invokeAction(
                            'cg.SDriveController.copyS3FileForAttach',
                            attachItems[currentItemNumber - 1],copySalesforceObjectResult, targetNamespacePrefix,
                            targetObjectFileName, targetObjectId,
                            function(copyS3FileResult, event){
                                //alert("copyS3FileResult:" + copyS3FileResult + " event.status: " + event.status);
                                if(event.status)
                                {
                                    currentWIPFile = null;
                                    goToNextItem();
                                }
                                else
                                {
                                    Visualforce.remoting.Manager.invokeAction(
                                            'cg.SDriveController.deleteExistingFileForAttach',
                                            copyS3FileResult, targetObjectId, targetObjectFileName, targetNamespacePrefix,
                                            function(deleteExistingFileResult, event){
                                                if(event.status)
                                                {
                                                    currentWIPFile = null;
                                                    //alert('Attach operation during Amazon copy failed for file: ' + attachItemNames[currentItemNumber - 1] + " Error Message: " + event.message);
                                                }
                                                else
                                                {
                                                    //alert('Attach operation during Amazon copy failed for file: ' + attachItemNames[currentItemNumber - 1] + " and could not cleanup the temp file. Error Message: " + event.message);
                                                }
                                                goToNextItem();
                                            },
                                            {escape: true}
                                        );
                                }
                            },
                            {escape: true}
                        );
                    }
                    else
                    {
                        //alert('Attach operation failed during data copy for file: ' + attachItemNames[currentItemNumber - 1] + " Error Message: " + event.message);
                        
                        var handleOK = function()
                            {
                                this.hide();
                                goToNextItem();
                            };
                        
                        YAHOO.cyangate.com.permissionDialog = 
                            new YAHOO.widget.SimpleDialog("permissionDialog", 
                                 { width: "300px",
                                   fixedcenter: true,
                                   visible: true,
                                   modal: true,
                                   draggable: true,
                                   close: false,
                                   hideaftersubmit: true,
                                   zIndex: 50,
                                   text: "Attach operation failed during data copy for file: " + attachItemNames[currentItemNumber - 1] + " Error Message: " + event.message,
                                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                                   constraintoviewport: true,
                                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                                 } );
                        YAHOO.cyangate.com.hideAttachPanel();
                        YAHOO.cyangate.com.permissionDialog.setHeader("Permission Error!");
                        YAHOO.cyangate.com.permissionDialog.render(document.body);
                        YAHOO.cyangate.com.permissionDialog.show();
                    }
                },
                {escape: true}
            );
        }

        
        function requestCancel()
        {
            cancelRequested = true;
            YAHOO.util.Dom.get('attachProgressBarLabel').innerHTML = 'Canceling ...';
        }
        
        function cancelAttach()
        {
            if (currentWIPFile != null)
            {
                Visualforce.remoting.Manager.invokeAction(
                    'cg.SDriveController.deleteExistingFileForAttach',
                    copyS3FileResult, targetObjectId, targetObjectFileName, targetNamespacePrefix,
                    function(deleteExistingFileResult, event){
                        if(!event.status)
                        {
                            //alert('Could not cleanup temp file!'); 
                        }
                        reloadFolderItems();
                        YAHOO.cyangate.com.hideAttachPanel();
                    },
                    {escape: true}
                );
            }
            else
            {
                reloadFolderItems();
                YAHOO.cyangate.com.hideAttachPanel();
            }
        }
        </script>
        <apex:outputPanel id="attachProgressPanel" rendered="{!NOT(pageHasErrors)}" style="height:300px">
            <center>
                <div id="attachProgressBarLabel" style="height:20px"></div>
                <div id="attachProgressBar" style="height:50px"></div>
            </center>
            
            <apex:commandButton onclick="requestCancel();return false;" title="Cancel" 
                value="Cancel" style="float:right;"  status="processStatus" />
        </apex:outputPanel>
        </apex:form>
        <br />
    </apex:outputPanel>
  </div>
 </div>
 
 <apex:outputPanel id="initDownloadManager">
 <script>     
    var downloadManagerPopup =
    {
        init : function()
        {   
            if(!popup || popup.closed || typeof popup == "undefined" || typeof popup.closed == "undefined")
            {            
                if(this.popups_are_disabled() == true)
                {           
                    this.alert_to_disable_popup_blocker();
                }
            }
            else
            {
                var isFolderSelected = '{!isFolderSelected}';
                if(isFolderSelected == 'true')
                {
                    //alert('You can\'t download a folder. Please check your selection list and try again!');
                    var handleOK = function()
                    {
                        this.hide();
                    };
                    
                    YAHOO.cyangate.com.errorDialog = 
                        new YAHOO.widget.SimpleDialog("errorDialog", 
                             { width: "300px",
                               fixedcenter: true,
                               visible: true,
                               modal: true,
                               draggable: true,
                               close: false,
                               hideaftersubmit: true,
                               zIndex: 100,
                               text: "You can\'t download a folder. Please check your selection list and try again!",
                               icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                               constraintoviewport: true,
                               buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                             } );
                    YAHOO.cyangate.com.errorDialog.render(document.body);
                    YAHOO.cyangate.com.errorDialog.show();
                }
                else
                {
                    var selectedIdNamePairs = '{!JSENCODE(selectedIdNamePairs)}';
                    popup.addNewDownloads(selectedIdNamePairs, 'S3Object');
                    popup.focus();
                }
            }
        },

        alert_to_disable_popup_blocker : function()
        {
            //alert("You have popup blocker enabled. Please disable popup blocker and try again!");
            var handleOK = function()
            {
                this.hide();
            };
            
            YAHOO.cyangate.com.errorDialog = 
                new YAHOO.widget.SimpleDialog("errorDialog", 
                     { width: "300px",
                       fixedcenter: true,
                       visible: true,
                       modal: true,
                       draggable: true,
                       close: false,
                       hideaftersubmit: true,
                       zIndex: 100,
                       text: "You have popup blocker enabled. Please disable popup blocker and try again!",
                       icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                       constraintoviewport: true,
                       buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                     } );
            YAHOO.cyangate.com.errorDialog.render(document.body);
            YAHOO.cyangate.com.errorDialog.show();
        },

        popups_are_disabled : function()
        {     
            var isFolderSelected = '{!isFolderSelected}';
            if(isFolderSelected == 'true')
            {
                //alert('You can\'t download a folder. Please check your selection list and try again!');
                var handleOK = function()
                {
                    this.hide();
                };
                
                YAHOO.cyangate.com.errorDialog = 
                    new YAHOO.widget.SimpleDialog("errorDialog", 
                         { width: "300px",
                           fixedcenter: true,
                           visible: true,
                           modal: true,
                           draggable: true,
                           close: false,
                           hideaftersubmit: true,
                           zIndex: 100,
                           text: "You can\'t download a folder. Please check your selection list and try again!",
                           icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                           constraintoviewport: true,
                           buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                         } );
                YAHOO.cyangate.com.errorDialog.render(document.body);
                YAHOO.cyangate.com.errorDialog.show();
            }
            else
            {         
                popup = window.open("{!URLFOR($Page.cg__DownloadAppletPage)}?selectedIdNamePairs={!JSENCODE(selectedIdNamePairs)}&objectId=S3Object", "downloadManager", "width=640,height=490");
        
                if(!popup || popup.closed || typeof popup == "undefined" || typeof popup.closed == "undefined")
                {
                    return true;
                }
                popup.focus();     
    
                //
                // Chrome popup detection requires that the popup validates itself - so we need to give
                // the popup time to load, then call js on the popup itself
                //
                if(navigator && (navigator.userAgent.toLowerCase()).indexOf("chrome") > -1)
                {           
                    var on_load_test = function(){downloadManagerPopup.test_chrome_popups(popup);};     
                    var timer = setTimeout(on_load_test, 1000);
                    return;  
                }
            }
        },

        test_chrome_popups : function(popup)
        {
            if(popup && popup.screenX != 0)
            {           
                return true;
            }
            
            //
            // If the popup js fails - popups are blocked
            //
            this.alert_to_disable_popup_blocker();
        }
      };
 </script>
 </apex:outputPanel>
<style>
.yui-skin-sam .yuimenuitemlabel {
    color: #000000;
    cursor: hand;
    cursor: pointer;
    padding: 0 20px;
    text-decoration: none;
}
.hiddenItemMenu
{
    visiblility: hidden;
    position: absolute;
    left: -999em;
    top: -999em;
}
#foldersColumn
{
    float:left;
    display:inline-block;
    width:30%;
    height: 100%;
    overflow: hidden;
}
#filesColumn
{
    float:right;
    display:inline;
    width:69%;
    height: 100%;
    overflow: hidden;
}
#sdriveContent
{
    width:100%;
}
.breadcrumbStyle
{
    height:22px;
    display:block;
}
.sdriveButtons
{
    border-bottom: 1px solid #CCCCCC; 
    height:42px; 
    width:100%; 
    padding-bottom: 2px;
    margin-bottom: 2px;
}
.searchBoxWrapper
{
    width:149px;
    height:28px;
    background-image:url('{!$Resource.cg__SearchBox}');
    background-repeat:no-repeat; 
    padding:0px;
    margin:0px;
    position:relative; 
    float:right;
}
.inputBoxSearchStyle
{
    border:0px;
    background-color:transparent; 
    position:absolute;
    top:4px;
    left:9px;
    width:110px;
    height:20px;
}
.searchbox_submit {
    border:0px; 
    background-color:transparent; 
    position:absolute;
    top:4px;
    left:125px;
    width:16px;
    height:20px;
    cursor: pointer; cursor: hand;
}

.paginationStyle
{
    float:right; 
}
.datePicker 
 {
    z-index: 9999;/*Changed this css property which was 100 prior*/
    position: absolute;
    display: none;
    top: 0;
    left: 0;
    width: 17em;
    background-color: #b7c6b2;
    border-bottom: 1px solid #000;
    border-right: 1px solid #000;
    margin: 0;
    padding: 1px 1px 2px 2px;
 }
/*
table.list {
    table-layout:fixed;
    width: 100%;
}

.cg_sdrive_checkbox{
    width: 20px;
}
.cg_sdrive_actions{
    width: 100px;
}
.cg_sdrive_type {
    width: 18px;
}
.cg_sdrive_filename {
    width: 200px;
}
.cg_sdrive_filename_data {
    width: 200px;
    text-overflow: ellipsis;
    word-wrap: break-word;
}
.cg_sdrive_createddate {
    width: 120px;
}
*/
</style>
<apex:outputPanel style="height:100%" rendered="{!NOT(fileAccessible)}">
You do not have permissions to access S-Drive data! 
</apex:outputPanel>
<apex:pageBlock rendered="{!messageAvailable}">
    <apex:outputText id="msg" value="{!message}"></apex:outputText>
  </apex:pageBlock>
<div id="sdriveContent">
        <div id="foldersColumn">
            <apex:outputPanel id="folders" style="height:100%" rendered="{!fileAccessible}">
                <apex:pageBlock title="Folders">
                    <div id="treeDiv"></div>
                 </apex:pageBlock>
            </apex:outputPanel>
        </div>
        <div id="filesColumn">
            <apex:form >
            <apex:actionRegion >
                <apex:pageBlock id="FileList" rendered="{!fileAccessible}" >
                    <script>
                        resetFileItems();
                    </script>
                    <div id="itemMenusDiv"></div>
                    <apex:pageMessages rendered="{!isCustomMessage}" />
                    <apex:outputPanel id="attachButtons" rendered="{!canAttach}">
                        <apex:commandButton value="Attach File(s)" id="attachFilesButton" action="{!attach}" 
                            onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select file(s) to attach!');return false;}"
                            reRender="attachPanelPB" status="processStatus" onComplete="javascript:displayAttachPanel();return false;"/>
                        <apex:commandButton value="Cancel Attach" id="cancelAttachButton" onclick="javascript:attachCompleted();return false;" /><p />
                    </apex:outputPanel>
                    <apex:outputPanel id="sdriveButtons" layout="block" styleClass="sdriveButtons" rendered="{!NOT(isShowVersions)}">
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'addFolder.png')}" id="addFolderButton" rendered="{!fileCreatable && displayUploadAndCreateButtons && NOT(isSearchInProgress && isSearchResultsFound)}"  title="New Folder" reRender="newFolderPanelPB" onComplete="YAHOO.cyangate.com.showNewFolderPanel();" status="processStatus" />
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'upload.png')}" id="uploadButton" rendered="{!NOT(isAppleDevice) && (fileCreatable && displayUploadAndCreateButtons && NOT(isSearchInProgress && isSearchResultsFound))}" title="Upload File(s)" reRender="uploadPanelPB" action="{!displayUploadWidget}" onComplete="displayUpload();" status="processStatus" />
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'download.png')}" id="downloadManagerButton" rendered="{!NOT(isAppleDevice) && enableDownloadManager}" title="Download File(s)" action="{!calculateSelectedIdNamePairs}" onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select file(s) to download!');return false;}" reRender="initDownloadManager" onComplete="downloadManagerPopup.init();" status="processStatus"/>
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'sendMail.png')}" id="sendMailButton" title="Email" action="{!emailSelected}" onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select file(s) to email!');return false;}" rendered="{!(enableEmailSDriveTab && (isCustomerPortalUser && NOT(disableEmailSDriveTabPortal))) || (enableEmailSDriveTab && NOT(isCustomerPortalUser))}" reRender="emailPanelPB" onComplete="YAHOO.cyangate.com.showEmailPanel();" status="processStatus"/>
                        &nbsp;
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'delete.png')}" id="deleteButton" rendered="{!fileDeletable}" title="Delete File(s)" reRender="confirmDeletePanelPB" action="{!tryDeleteSelected}" onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select item(s) to delete!');return false;}" onComplete="YAHOO.cyangate.com.showConfirmDeletePanel();" status="processStatus"/>
                        &nbsp;
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'editCut.png')}" id="cutButton" rendered="{!fileCreatable && displayUploadAndCreateButtons && fileUpdateable && fileDeletable}" title="Cut" onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select file(s) to cut!');return false;}" reRender="pastePanel,cutCopyPanelPB" action="{!cutSelected}" status="processStatus"/>
                        <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'editCopy.png')}" id="copyButton" rendered="{!fileCreatable && fileUpdateable && fileDeletable}" title="Copy" onclick="if(!anyFileSelected(this)){displayYUISimpleDialog('Please select file(s) to copy!');return false;}" rerender="pastePanel,cutCopyPanelPB" action="{!copySelected}" status="processStatus"/>
                        <apex:outputPanel id="pastePanel" >
                            <apex:commandButton image="{!URLFOR($Resource.cg__SDriveButtons,'editPaste.png')}" id="pasteButton" rendered="{!NOT(isSearchInProgress && isSearchResultsFound) && displayUploadAndCreateButtons && cutCopyItems.size > 0}" title="Paste {!(cutCopyItems.size)} Item(s)" action="{!pasteSelectedFiles}" reRender="cutCopyPanelPB" status="processStatus" onComplete="displayCopyPastePanel();"/>
                        </apex:outputPanel>
                        <apex:actionStatus id="processStatus" startText="Processing..." startStyle="color:red;font-size:14px;" />

                        <div class="searchBoxWrapper">
                            <apex:inputText id="inputBoxSearch" styleClass="inputBoxSearchStyle" value="{!searchKeyword}"
                                onfocus="onClickSearchTextBox()" onblur="onClickEsleware('notForce')" onkeypress="return handleKeysOnSearchTextBox(event)"/>
                            <apex:image id="searchIcon" value="{!$Resource.cg__SearchIcon}" styleClass="searchbox_submit"
                                onclick="handleEmptySearchKey()"/>
                        </div>

                        <apex:actionFunction action="{!searchKeywordResult}" rerender="FileList" name="searchFileList" status="processStatus"/> 
                        <script>
                            if(document.getElementById('{!$Component.inputBoxSearch}').value == null || 
                                document.getElementById('{!$Component.inputBoxSearch}').value == '')
                            {
                                document.getElementById('{!$Component.inputBoxSearch}').value = 'Search';
                            }
                        </script>
                    </apex:outputPanel>
                        
                    <apex:outputPanel styleClass="breadcrumbStyle">
                        <div style="display:inline;font-size:12px;" align="left">
                            <b><apex:commandLink id="homeLink" value="Home" action="{!changeFolder}" reRender="FileList" 
                                status="processStatus" rendered="{!NOT(isSearchInProgress && isSearchResultsFound)}">
                                <apex:param name="objectId" assignTo="{!objectIdAT}" value="" />
                                </apex:commandLink></b>
                            <b><apex:commandLink id="homeLinkWhileSearching" value="Back to Home" action="{!changeFolder}" 
                                reRender="FileList" status="processStatus" rendered="{!isSearchInProgress && isSearchResultsFound}"/>
                                <apex:repeat value="{!folderHistoryStack}" var="folder" id="breadCrumbRepeater" 
                                    rendered="{!NOT(isSearchInProgress && isSearchResultsFound)}">/&nbsp; 
                                    <apex:commandLink value="{!folder.Name}" action="{!changeFolder}"
                                        reRender="FileList" status="processStatus">
                                            <apex:param name="objectId" assignTo="{!objectIdAT}" value="{!folder.Id}" />
                                    </apex:commandLink>
                                </apex:repeat> 
                                &nbsp;&nbsp;
                                <apex:outputLabel value="Versions of {!versionFileName}" rendered="{!isVersionedBucket&&isShowVersions}"></apex:outputLabel>
                                </b>
                        </div>
                        <script>
                        
                            var checkBoxAll = document.getElementById('{!$Component.filesPB.checkBoxAll}');
                            if(checkBoxAll)
                            {
                             checkBoxAll.checked = false;
                            }
                            
                            function handleEmptySearchKey()
                            {
                                String.prototype.trim = function ()
                                {
                                    return this.replace(/^\s*/, "").replace(/\s*$/, "");
                                }   
                                var searchKey = document.getElementById('{!$Component.inputBoxSearch}').value;
                                var trimmedKey = searchKey.trim();
                                if(trimmedKey == "")
                                { 
                                    //window.alert("Search Keyword cannot be empty");
                                    displayYUISimpleDialog("Search keyword cannot be empty!");
                                    
                                } 
                                else if(trimmedKey.length == 1 || trimmedKey.replace(/[*?]/g, "").length < 2)
                                {
                                    //window.alert("Search Keyword must be longer than one character");
                                    displayYUISimpleDialog("Search keyword must be longer than one character!");
                                }
                                else
                                {
                                    searchFileList();
                                }
                              }
                              
                            function onClickSearchTextBox(e)
                            {
                                if(document.getElementById('{!$Component.inputBoxSearch}').value == "Search")
                                {
                                    document.getElementById('{!$Component.inputBoxSearch}').value = "";
                                }
                            }
                              
                            function onClickEsleware(toForce)
                            {
                                if(toForce == "notForce")
                                {
                                    if(document.getElementById('{!$Component.inputBoxSearch}').value == null || 
                                        document.getElementById('{!$Component.inputBoxSearch}').value == '')
                                    {
                                        document.getElementById('{!$Component.inputBoxSearch}').value = 'Search';
                                    }
                                }
                                else
                                {
                                    document.getElementById('{!$Component.inputBoxSearch}').value = 'Search';
                                }
                            }
                              
                            function handleKeysOnSearchTextBox(ev)
                            {
                                if (window.event && window.event.keyCode == 13 || ev.which == 13) 
                                {
                                    handleEmptySearchKey();
                                    return false;
                                } 
                                else
                                {
                                    return true;
                                }
                            }
                            function checkAll(cb)
                            {
                                var inputElem = document.getElementsByTagName("input");
                                for(var i=0; i<inputElem.length; i++)
                                {
                                    if(inputElem[i].id.indexOf("checkedone")!=-1)
                                    inputElem[i].checked = cb.checked;
                                }
                                return false;
                            }  
                            function anyFileSelected(cb)
                            {
                                var isSelected = false;
                                var inputElem = document.getElementsByTagName("input");
                                for(var i=0; i<inputElem.length; i++)
                                {   
                                    if(inputElem[i].id.indexOf("checkedone")!=-1)
                                    {
                                        if(inputElem[i].checked)
                                        {
                                            isSelected = true;
                                            break;
                                        }
                                    }       
                                }
                                return isSelected;
                            }
                        </script>
                        <div align="center" style="display:inline; text-align:center;padding-left: 30em;">
                            <apex:outputText value="No Results Found!" style="color:red;font-size:16px;" 
                                rendered="{!(isSearchInProgress) && NOT(isSearchResultsFound) }"/>
                            <apex:outputText value="{!searchResultCount} Result(s) Found" style="font-size:16px" 
                                rendered="{!(isSearchInProgress) && isSearchResultsFound}"/>
                        </div>
 
                        <apex:actionFunction name="cg_navigate" action="{!navigateToPage}" rerender="FileList" status="processStatus">
                                <apex:param name="pageNum" assignTo="{!pageNumAT}" value=""/>
                       </apex:actionFunction>
                        <apex:actionFunction name="copyS3VersionFile" action="{!copyS3VersionFile}" rerender="FileList" status="processStatus">
                        </apex:actionFunction>
                       <apex:outputPanel layout="block" id="topPagination" rendered="{!showPages && NOT(isSearchInProgress)}" styleClass="paginationStyle" >
                       <b>Total Items:</b> {!totalItems}&nbsp;<b>Page:&nbsp;</b>
                       
                       <apex:repeat var="p" value="{!pages}">
                           <apex:outputPanel onclick="cg_navigate('{!p}')" rendered="{!(p != pageNumAT)}" styleClass="btn">{!p}</apex:outputPanel>
                            
                           <apex:outputPanel rendered="{!p == pageNumAT}">{!pageNumAT}</apex:outputPanel>
                           &nbsp;
                       </apex:repeat>
                   </apex:outputPanel>
                    </apex:outputPanel>
                   
                    <apex:pageBlockTable id="filesPB" value="{!files}" var="f">
                        <apex:column width="20px" headerClass="cg_sdrive_checkbox" rendered="{!NOT(isShowVersions)}">
                            <apex:facet name="header">
                             <apex:inputCheckbox id="checkBoxAll" >
                                 <apex:actionSupport rerender="" event="onclick" onsubmit="checkAll(this)"/>
                             </apex:inputCheckbox>
                           </apex:facet>
                            <apex:inputCheckbox value="{!f.checked}"  id="checkedone" />
                        </apex:column>
                        <apex:column headerValue="Actions" width="85px" headerClass="cg_sdrive_actions">
                            <apex:outputPanel layout="inline" rendered="{!(f.contentType != 'Folder') || fileUpdateable || shareEnabled || fileDeletable}">
                            <div style="text-align: center; white-space:nowrap;">
                                <button id="menutoggle_{!f.file.Id}" type="button" class="menubutton" onclick="showItemMenu(this)">Item Actions <img src="{!URLFOR($Resource.DownArrow)}" /></button>
                            </div>
                            </apex:outputPanel>
                            <div id="basicmenu_{!f.file.Id}" class="hiddenItemMenu yuimenu">
                            <div class="bd" style="border-radius: 4px;box-shadow: 0 2px 8px rgba(0, 0, 0, 0.45);">
                                <ul class="first-of-type">
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Download" title="Download File" action="{!downloadFile}"
                                            rendered="{!(f.contentType != 'Folder')}" reRender="downloadArea">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                            <apex:param name="fileName" value="{!f.fileName}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Open" title="Open File in New Window" action="{!openFile}"
                                            rendered="{!(f.contentType != 'Folder')}" reRender="openArea" onComplete="openFilePopupWarning.init()">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Copy URL" title="Copy URL to Clipboard" action="{!retrieveCopyUrl}" 
                                            rendered="{!(f.contentType != 'Folder') && NOT(disableCopyUrlSDriveTab)}"
                                            reRender="copyUrlPanelPB" onComplete="YAHOO.cyangate.com.showCopyUrlPanel();">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                            <apex:param name="fileName" value="{!f.fileName}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Edit" title="Edit Description" rendered="{!fileUpdateable}" action="{!editFieldValues}"
                                                reRender="editPanelPB" onComplete="YAHOO.cyangate.com.showEditPanel();" status="processStatus">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Rename" title="Rename Item" rendered="{!fileUpdateable}" action="{!editFieldValues}"
                                                reRender="renamePanelPB" onComplete="YAHOO.cyangate.com.showRenamePanel();" status="processStatus">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Share" title="Edit Share Settings" rendered="{!(shareEnabled)&&(isVersionedBucket)&&NOT(isShowVersions)}" action="{!loadShareWidget}"
                                                reRender="sharePanelPB" onComplete="YAHOO.cyangate.com.showSharePanel();" status="processStatus">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Delete" title="Delete Item" rendered="{!fileDeletable}"
                                            action="{!confirmDelete}" reRender="confirmDeletePanelPB"
                                                onComplete="YAHOO.cyangate.com.showConfirmDeletePanel();" status="processStatus">
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                            <apex:param name="attachmentContentType" value="{!f.contentType}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Upload New Version" title="Upload New Version" reRender="uploadPanelPB" action="{!displayVersionUploadWidget}" onComplete="displayUpload();" status="processStatus" 
                                            rendered="{!(f.contentType != 'Folder')&&(isVersionedBucket)&&NOT(isShowVersions)&&NOT(isAppleDevice) && (fileCreatable && displayUploadAndCreateButtons)}" >
                                            <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                     <li class="yuimenuitem">
                                        <apex:commandLink value="Previous Versions" title="Previous Versions"  reRender="FileList" action="{!loadVersions}" status="processStatus" 
                                            rendered="{!(f.contentType != 'Folder')&&(isVersionedBucket)&&NOT(isShowVersions)&&NOT(isAppleDevice) && (fileCreatable)}" >
                                            <apex:param name="versionFileId" value="{!f.file.Id}" />
                                            <apex:param name="versionFileName" value="{!f.fileName}" />
                                        </apex:commandLink>
                                    </li>
                                    <li class="yuimenuitem">
                                        <apex:commandLink value="Set Current" title="Set Current" reRender="FileList" action="{!copyVersionObject}" status="processStatus" onComplete="copyS3VersionFile();"
                                            rendered="{!(f.contentType != 'Folder')&&(isVersionedBucket)&&(isShowVersions)&&(f.file.Id != versionFileId)&&NOT(isAppleDevice) && (fileCreatable && fileUpdateable)}" >
                                            <apex:param name="versionFileIdToCurrent" value="{!f.file.Id}" />
                                        </apex:commandLink>
                                    </li>
                                </ul>            
                            </div>
                        </div>
                        </apex:column>
                        <apex:column width="16px" headerClass="cg_sdrive_type">
                            <div align="center">
                                <apex:facet name="header">
                                <apex:outputPanel layout="block" style="text-align: center;">
                                <apex:commandLink value="T " title="Content Type" action="{!doSort}" status="processStatus" reRender="FileList">
                                    <apex:param name="sortField" value="cg__Content_Type__c" assignTo="{!sortFieldAT}"/>
                                </apex:commandLink>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'ascending.gif')}" alt="ASC" title="Ascending" rendered="{!order == 'asc' && sortFieldAT == 'cg__Content_Type__c'}"></apex:image>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'descending.gif')}" alt="DESC" title="Descending" rendered="{!order == 'desc' && sortFieldAT == 'cg__Content_Type__c'}"></apex:image>
                                </apex:outputPanel>
                            </apex:facet>
                                <apex:outputPanel rendered="{!(f.contentType == 'Folder')}">
                                    <apex:outputLink title="{!f.fileName}" rendered="{!(f.contentType == 'Folder')}" 
                                    value="javascript:loadFolderItems('{!JSINHTMLENCODE(f.file.Id)}')">
                                        <apex:image width="16" height="16" url="{!URLFOR($Resource.cg__SDriveFileIcons, f.iconName)}"></apex:image>
                                    </apex:outputLink> 
                                </apex:outputPanel>     
                                <apex:outputPanel rendered="{!(f.contentType != 'Folder')}">
                                    <apex:actionSupport event="onclick" action="{!downloadFile}" reRender="downloadArea">
                                        <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                        <apex:param name="fileName" value="{!f.fileName}" />
                                    </apex:actionSupport>
                                    <apex:image width="16" height="16" url="{!URLFOR($Resource.cg__SDriveFileIcons, f.iconName)}" title="{!f.contentType}"></apex:image>
                                </apex:outputPanel>
                            </div>
                        </apex:column>
                        <apex:column width="150px" styleClass="cg_sdrive_filename_data" headerClass="cg_sdrive_filename">
                            <apex:facet name="header">
                                <apex:outputPanel layout="block">
                                <apex:commandLink value="{!$ObjectType.cg__S3Object__c.Fields.cg__File_Name__c.Label} " action="{!doSort}" status="processStatus" reRender="FileList">
                                    <apex:param name="sortField" value="cg__File_Name__c" assignTo="{!sortFieldAT}"/>
                                </apex:commandLink>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'ascending.gif')}" alt="ASC" title="Ascending" rendered="{!order == 'asc' && sortFieldAT == 'cg__File_Name__c'}"></apex:image>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'descending.gif')}" alt="DESC" title="Descending" rendered="{!order == 'desc' && sortFieldAT == 'cg__File_Name__c'}"></apex:image>
                                </apex:outputPanel>
                            </apex:facet>
                                <apex:outputLink title="{!f.fileName}" rendered="{!(f.contentType == 'Folder')}" 
                                value="javascript:loadFolderItems('{!JSINHTMLENCODE(f.file.Id)}')">
                                    {!f.fileName}
                                </apex:outputLink>
                            <apex:commandLink title="{!f.fileName}" value="{!f.fileName}" action="{!downloadFile}"  
                                rendered="{!(f.contentType != 'Folder')}" reRender="downloadArea">
                                <apex:param name="attachmentFileId" value="{!f.file.Id}" />
                                <apex:param name="fileName" value="{!f.fileName}" />
                            </apex:commandLink>
                            <apex:outputLabel rendered="{!(f.contentType != 'Folder')&&((isVersionedBucket)&&(isShowVersions)&&(f.file.Id == versionFileId))}" value=" (Current) "></apex:outputLabel>
                        </apex:column>
                        <apex:column headerValue="Created Date" width="150px" headerClass="cg_sdrive_createddate">
                            <apex:facet name="header">
                                <apex:outputPanel layout="block">
                                <apex:commandLink value="{!$ObjectType.cg__S3Object__c.Fields.CreatedDate.Label} " action="{!doSort}" status="processStatus" reRender="FileList">
                                    <apex:param name="sortField" value="CreatedDate" assignTo="{!sortFieldAT}"/>
                                </apex:commandLink>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'ascending.gif')}" alt="ASC" title="Ascending" rendered="{!order == 'asc' && sortFieldAT == 'CreatedDate'}"></apex:image>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'descending.gif')}" alt="DESC" title="Descending" rendered="{!order == 'desc' && sortFieldAT == 'CreatedDate'}"></apex:image>
                                </apex:outputPanel>
                            </apex:facet>
                            <apex:outputField value="{!f.file['CreatedDate']}"></apex:outputField>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:outputPanel layout="block">
                                <apex:commandLink value="{!$ObjectType.cg__S3Object__c.Fields.CreatedById.Label} " action="{!doSort}" status="processStatus" reRender="FileList">
                                    <apex:param name="sortField" value="CreatedById" assignTo="{!sortFieldAT}"/>
                                </apex:commandLink>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'ascending.gif')}" alt="ASC" title="Ascending" rendered="{!order == 'asc' && sortFieldAT == 'CreatedById'}"></apex:image>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'descending.gif')}" alt="DESC" title="Descending" rendered="{!order == 'desc' && sortFieldAT == 'CreatedById'}"></apex:image>
                                </apex:outputPanel>
                            </apex:facet>
                            <apex:outputField value="{!f.file['CreatedById']}"></apex:outputField>
                        </apex:column>
                        <apex:column headerValue="Description">
                            <apex:outputField value="{!f.file['cg__Description__c']}"></apex:outputField>
                        </apex:column>
                        <apex:column headerValue="Version Description" rendered="{!(isVersionedBucket)&&(isShowVersions)}">
                            <apex:outputField value="{!f.file['cg__Version_Description__c']}"></apex:outputField>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:outputPanel layout="block">
                                <apex:commandLink value="{!$ObjectType.cg__S3Object__c.Fields.cg__File_Size__c.Label} " action="{!doSort}" status="processStatus" reRender="FileList">
                                    <apex:param name="sortField" value="cg__File_Size_in_Bytes__c" assignTo="{!sortFieldAT}"/>
                                </apex:commandLink>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'ascending.gif')}" alt="ASC" title="Ascending" rendered="{!order == 'asc' && sortFieldAT == 'cg__File_Size_in_Bytes__c'}"></apex:image>
                                <apex:image url="{!URLFOR($Resource.cg__SDriveFileIcons, 'descending.gif')}" alt="DESC" title="Descending" rendered="{!order == 'desc' && sortFieldAT == 'cg__File_Size_in_Bytes__c'}"></apex:image>
                                </apex:outputPanel>
                            </apex:facet>
                            <apex:outputField value="{!f.file['cg__File_Size__c']}"></apex:outputField>
                        </apex:column>
                    </apex:pageBlockTable>
                    <apex:outputPanel layout="block" id="bottomPagination" rendered="{!showPages && NOT(isSearchInProgress)}" styleClass="paginationStyle" >
                       <b>Total Items:</b> {!totalItems}&nbsp;<b>Page:&nbsp;</b>
                       
                       <apex:repeat var="p" value="{!pages}">
                           <apex:outputPanel onclick="cg_navigate('{!p}')" rendered="{!(p != pageNumAT)}" styleClass="btn">{!p}</apex:outputPanel>
                            
                           <apex:outputPanel rendered="{!p == pageNumAT}">{!pageNumAT}</apex:outputPanel>
                           &nbsp;
                       </apex:repeat>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!NOT(hasFiles)}">
                        <table class="list" style="border: 1px solid #D4DADC;">
                            <tbody>
                                <tr>
                                    <td style="border: 0 none; font-size: lem;background-color: #F8F8F8;">
                                        <apex:outputLabel value="No records to display" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </apex:outputPanel>
                    <apex:outputLabel value="No records to display" rendered="{!(ISNULL(files))}" styleClass="noRowsHeader"></apex:outputLabel>
                </apex:pageBlock>
            </apex:actionRegion>
            </apex:form>
            <script>beenFocused = true; </script>
        </div>
</div>

<div id="responseErrors"></div>
<style>
.ygtvlabel,.ygtvlabel:hover,.ygtvlabel:visited,.ygtvlabel:link{background-color: #F8F8F8}
.ygtvfocus{background-color:#F8F8F8;border:0}
.ygtvfocus .ygtvlabel,.ygtvfocus .ygtvlabel:link,.ygtvfocus .ygtvlabel:visited,.ygtvfocus .ygtvlabel:hover{background-color:#F8F8F8}
</style>
<script>         
    function folderData(name, identifier, hasChildren)
    {
        this.label = name;
        this.title = name;
        this.id = identifier;
        this.isLeaf = (hasChildren=='false');
    }  
    
    (function()
    {
        var tree;
        
        function treeInit()
        { 
            buildRoot();
        }
        
        function buildRoot()
        { 
            tree = new YAHOO.widget.TreeView("treeDiv");
                    
            tree.subscribe('clickEvent',function(oArgs){ 
                
                loadFolderItems(oArgs.node.data.id); 
                oArgs.node.collapse();
                oArgs.node.dynamicLoadComplete = false;
                oArgs.node.tree.removeChildren(oArgs.node);
                oArgs.node.expand();
            }); 
            
            tree.setDynamicLoad(loadNodeData, 0);
            var homeNode = new YAHOO.widget.TextNode(new folderData("Home", "", true), 
                    tree.getRoot());
                   
            tree.draw();
            homeNode.expand();
        }
              
        function loadNodeData(node, fnLoadComplete) 
        { 
            //here run an ajax call to retrieve subfiles and load them as nodes.
            //when the call is done, we need to call fnLoadComplete function to complete the call.
            // node.Id will give the ID of the folder
            cg.SDriveController.loadFoldersTree(node.data.id + '', function(result, event)
                {
                if (event.status)
                {
                    for(var i = 0; i < result.length; i++)
                    { 
                      var nodeData = new folderData(
                          result[i].substring(result[i].indexOf('|') + 1, result[i].lastIndexOf('|')), 
                          result[i].substring(0,result[i].indexOf('|')),
                          result[i].substring(result[i].lastIndexOf('|') + 1, result[i].length));
                        tempNode = new YAHOO.widget.TextNode(nodeData, node); 
                    }
                }
                else if (event.type === 'exception')
                {
                    document.getElementById("responseErrors").innerHTML = event.message;
                }
                else
                {
                    document.getElementById("responseErrors").innerHTML = event.message;
                }
                fnLoadComplete();
            }, {escape:true});
      }   
        YAHOO.util.Event.onDOMReady(treeInit);
    })();
    
    function attachCompleted()
    {
        window.location.href = decodeURIComponent('{!JSENCODE($Request.returnUrl)}');
    }        
    
    function displayYUISimpleDialog(message)
    {
        var handleOK = function()
        {
            this.hide();
        };
        
        YAHOO.cyangate.com.errorDialog = 
            new YAHOO.widget.SimpleDialog("errorDialog", 
                 { width: "300px",
                   fixedcenter: true,
                   visible: true,
                   modal: true,
                   draggable: true,
                   close: false,
                   hideaftersubmit: true,
                   zIndex: 100,
                   text: message,
                   icon: YAHOO.widget.SimpleDialog.ICON_WARN,
                   constraintoviewport: true,
                   buttons: [{text:"OK", handler:handleOK, isDefault:true }]
                 } );
        YAHOO.cyangate.com.errorDialog.render(document.body);
        YAHOO.cyangate.com.errorDialog.show();
    }
//    $(function() {
//        $('table.list').find('.cg_sdrive_filename_data a').each(function (i, el) {
//            var fileNameA = $.trim($(this).text());
//            if(fileNameA.length > 25){
//                $(this).html(fileNameA.substring(0, 24) + "..." );
//            }
//        });      
//    });
//    $('table.list').find('.cg_sdrive_filename_data a').each(function (i, el) {
//        $(this).change(function() {
//             alert( "Handler for .change() called." );
//         });
//     });
    </script>
</apex:outputPanel>
</apex:page>